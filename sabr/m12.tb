# M12 problem in SABR
#
#  See 
#  Igor Kriz and Paul Siegel: 
#      Rubik's Cube Inspired Puzzles Demonstrate Math's "Simple Groups"
#  http://www.sciam.com/article.cfm?id=simple-groups-at-play
# 
#  Programs:
#   http://www.math.lsa.umich.edu/~ikriz/
#   http://www.sciam.com/article.cfm?id=puzzles-simple-groups-at-play
# 
#  This model implements the M12 puzzle:
#   - length is 12 (2*6)
#   - the two operations are 
#       * merge (shuffle) and 
#       * inverse (reverse)
#   - some init configuration
#
# 
#  For a group theoretic solution of the M12 puzzle using the abstract algebra system GAP, 
#  see http://www.hakank.org/group_theory/M12_gap.txt
#  It is presented in the (swedish) blog post
#  "Gruppteoretisk l√∂sning av M12 puzzle i GAP" (Group theoretical solution of the M12 puzzle in GAP)
#  http://www.hakank.org/webblogg/archives/001226.html
#
# Author: Hakan Kjellerstrand (hakank@bonetmail.com)
#
# For more about SABR, see http://sabrlang.org/index.html
# 

# Testing with
#  $ cd SABR
#  $ ./sabr 4 -all < ../m12.tb
#
# Output will be in ./result.out
# 
# For more systematic testing:
# $ perl -e 'for(1..10) { print `./sabr $_ -all < ../m12.tb`}' 
#
# 

# Symbols used
Sym{ 1 2 3 4 5 6 7 8 9 10 11 12 }

Board{
 a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12
}

# 4 moves
# Start{
#    4 1 10 7 9 12 3 6 5 2 11 8
# }

# 15 moves
# Start{
#   10 5 4 7 1 2 8 3 12 11 9 6
# }

# 22 moves
# ./sabr 23 -all < ../m12.tb
#   8:29 minutes
# Start{
#   10 8 6 12 5 2 1 4 11 7 9 3
# }


# 20 moves
# ./sabr 20 -all < ../m12.tb
#   46.286s
# Start{
#   7 5 8 3 1 11 2 9 4 12 6 10
# }

#
# 13 moves
# ./sabr 13 -all < ../m12.tb
#    0.2s
Start{
  5 6 10 4 1 11 9 2 12 8 3 7
}



End{
   1 2 3 4 5 6 7 8 9 10 11 12
}

#
# The moves
#

# Inverse (reverse)
Trans Inverse:Move{
  v12 v11 v10 v9 v8 v7 v6 v5 v4 v3 v2 v1
=>
  v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12
}

# Merge (shuffle)
Trans Merge:Move{
  v1 v12 v2 v11 v3 v10 v4 v9 v5 v8 v6 v7
=>
  v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12
}



DesObj M:Move{ a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 }

