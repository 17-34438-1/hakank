#
# Sudoku problem in SABR
#
# See http://en.wikipedia.org/wiki/Sudoku
#
# This encoding is (just) an extension of the 4x4 problem
# stated in http://sabrlang.org/sudoku.html
# 
#
# Author: Hakan Kjellerstrand (hakank@bonetmail.com)
#
# For more about SABR, see http://sabrlang.org/index.html
# 


Sym{ 1 2 3 4 5 6 7 8 9 }

Board {
  a1 a2 a3 a4 a5 a6 a7 a8 a9 ;
  b1 b2 b3 b4 b5 b6 b7 b8 b9 ;
  c1 c2 c3 c4 c5 c6 c7 c8 c9 ;
  d1 d2 d3 d4 d5 d6 d7 d8 d9 ;
  e1 e2 e3 e4 e5 e6 e7 e8 e9 ;
  f1 f2 f3 f4 f5 f6 f7 f8 f9 ;
  g1 g2 g3 g4 g5 g6 g7 g8 g9 ;
  h1 h2 h3 h4 h5 h6 h7 h8 h9 ;
  i1 i2 i3 i4 i5 i6 i7 i8 i9 ;
}


#
# Empty board
#

# Req Board{
#   ? ? ? ? ? ? ? ? ? ;
#   ? ? ? ? ? ? ? ? ? ;
#   ? ? ? ? ? ? ? ? ? ;
#   ? ? ? ? ? ? ? ? ? ;
#   ? ? ? ? ? ? ? ? ? ;
#   ? ? ? ? ? ? ? ? ? ;
#   ? ? ? ? ? ? ? ? ? ;
#   ? ? ? ? ? ? ? ? ? ;
#   ? ? ? ? ? ? ? ? ? ;
# }

#
# Req Board{
#   ? ? ?  2 ? 5  ? ? ?;
#   ? 9 ?  ? ? ?  7 3 ?;
#   ? ? 2  ? ? 9  ? 6 ?;
#
#   2 ? ?  ? ? ?  4 ? 9;
#   ? ? ?  ? 7 ?  ? ? ?;
#   6 ? 9  ? ? ?  ? ? 1;
#
#   ? 8 ?  4 ? ?  1 ? ?;
#   ? 6 3  ? ? ?  ? 8 ?;
#   ? ? ?  6 ? 8  ? ? ?;
# }


# Req Board{
#   ? ? ?  ? ? 8  ? ? 9 ;
#   ? 5 ?  ? 9 ?  ? ? ? ;
#   ? ? 9  ? ? 4  8 ? ? ;
#
#   ? ? 2  1 4 ?  ? ? 3 ;
#   ? ? 6  ? ? ?  9 ? ? ;
#   4 ? ?  ? 6 7  1 ? ? ;
#
#   ? ? 5  9 ? ?  3 ? ? ;
#   ? ? ?  ? 3 ?  ? 7 ? ;
#   8 ? ?  4 ? ?  ? ? ? ;
# }


# The problem instance from the Wikipedia
# article
Req Board{
   5 3 ?  ? 7 ?  ? ? ?;
   6 ? ?  1 9 5  ? ? ?;
   ? 9 8  ? ? ?  ? 6 ?;

   8 ? ?  ? 6 ?  ? ? 3;
   4 ? ?  8 ? 3  ? ? 1;
   7 ? ?  ? 2 ?  ? ? 6;

   ? 6 ?  ? ? ?  2 8 ?;
   ? ? ?  4 1 9  ? ? 5;
   ? ? ?  ? 8 ?  ? 7 9;

}


Req Alldiff {v !v !v !v !v !v !v !v !v }
Req Alldiff {!v v !v !v !v !v !v !v !v }
Req Alldiff {!v !v v !v !v !v !v !v !v }
Req Alldiff {!v !v !v v !v !v !v !v !v }
Req Alldiff {!v !v !v !v v !v !v !v !v }
Req Alldiff {!v !v !v !v !v v !v !v !v }
Req Alldiff {!v !v !v !v !v !v v !v !v }
Req Alldiff {!v !v !v !v !v !v !v v !v }
Req Alldiff {!v !v !v !v !v !v !v !v v }



# Rows
DesObj Alldiff { a1 a2 a3 a4 a5 a6 a7 a8 a9 }
DesObj Alldiff { b1 b2 b3 b4 b5 b6 b7 b8 b9 }
DesObj Alldiff { c1 c2 c3 c4 c5 c6 c7 c8 c9 }
DesObj Alldiff { d1 d2 d3 d4 d5 d6 d7 d8 d9 }
DesObj Alldiff { e1 e2 e3 e4 e5 e6 e7 e8 e9 }
DesObj Alldiff { f1 f2 f3 f4 f5 f6 f7 f8 f9 }
DesObj Alldiff { g1 g2 g3 g4 g5 g6 g7 g8 g9 }
DesObj Alldiff { h1 h2 h3 h4 h5 h6 h7 h8 h9 }
DesObj Alldiff { i1 i2 i3 i4 i5 i6 i7 i8 i9 }

# Cols
DesObj Alldiff { a1 b1 c1 d1 e1 f1 g1 h1 i1 }
DesObj Alldiff { a2 b2 c2 d2 e2 f2 g2 h2 i2 }
DesObj Alldiff { a3 b3 c3 d3 e3 f3 g3 h3 i3 }
DesObj Alldiff { a4 b4 c4 d4 e4 f4 g4 h4 i4 }
DesObj Alldiff { a5 b5 c5 d5 e5 f5 g5 h5 i5 }
DesObj Alldiff { a6 b6 c6 d6 e6 f6 g6 h6 i6 }
DesObj Alldiff { a7 b7 c7 d7 e7 f7 g7 h7 i7 }
DesObj Alldiff { a8 b8 c8 d8 e8 f8 g8 h8 i8 }
DesObj Alldiff { a9 b9 c9 d9 e9 f9 g9 h9 i9 }

# Blocks
DesObj Alldiff { a1 a2 a3 b1 b2 b3 c1 c2 c3 }
DesObj Alldiff { a4 a5 a6 b4 b5 b6 c4 c5 c6 }
DesObj Alldiff { a7 a8 a9 b7 b8 b9 c7 c8 c9 }

DesObj Alldiff { d1 d2 d3 e1 e2 e3 f1 f2 f3 }
DesObj Alldiff { d4 d5 d6 e4 e5 e6 f4 f5 f6 }
DesObj Alldiff { d7 d8 d9 e7 e8 e9 f7 f8 f9 }

DesObj Alldiff { g1 g2 g3 h1 h2 h3 i1 i2 i3 }
DesObj Alldiff { g4 g5 g6 h4 h5 h6 i4 i5 i6 }
DesObj Alldiff { g7 g8 g9 h7 h8 h9 i7 i8 i9 }

