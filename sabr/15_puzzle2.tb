#
# 15 puzzle in SABR
#
# See http://en.wikipedia.org/wiki/Fifteen_puzzle
#
# This encoding is the "dual" of 
#    http://www.hakank.org/sabr/15_puzzle.tb
#
# here we have two simple transitions but many DesObj's instead.
# 
# Author: Hakan Kjellerstrand (hakank@bonetmail.com)
#         http://www.hakank.org/index_eng.html
#
# For more about SABR, see http://sabrlang.org/index.html
# 

# Testing with
#  $ cd SABR
#  $ ./sabr 4 -all < ../15_puzzle2.tb
#
# Output will be in ./result.out
# 
# For more systematic testing:
# $ perl -e 'for(1..10) { print `./sabr $_ -all < ../15_puzzle2.tb`}' 
#


# The symbols
Sym{ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 B }


Board{
   a1  a2  a3  a4 ;
   a5  a6  a7  a8 ;
   a9 a10 a11 a12 ;
  a13 a14 a15 a16 ;
}

##
## Extremely simple problem (one move)
##
# Start{
#    1  2  3  4;
#    5  6  7  8;
#    9 10 11 12;
#   13 14  B 15
# }

#
## Very simple problem. OK
#
# Start{
#    1  2  3  4;
#    5  6  7  8;
#    9  B 11 12;
#   13 10 14 15
# }

#
# Quite easy problem (7 moves)
#
# ./sabr 7 -all < ../15_puzzle.tb
# Start{
#   B  2  3  4;
#   1  6  7  8;
#   5 10 11 12;
#   9 13 14 15;
# }


# Quite simple
# Start{
#     1  2  3  B;
#     5  6  7  4;
#     9 10 11  8;
#    13 14 15 12;
# }

# This is OK
# Start{
#     1  2  3  4;
#     5  B  6  7;
#     9 10 11  8;
#    13 14 15 12;
# }

# This is OK
# Start{
#     1  B  3  4;
#     5  2  6  7;
#     9 10 11  8;
#    13 14 15 12;
# }

# This is OK
# Start{
#     1  3  B  4 ;
#     5  2  6  7 ;
#     9 10 11  8 ;
#    13 14 15 12 ;
# }

# Start{
#      5  1  3  4;
#      B  2  6  7;
#      9 10 11  8;
#     13 14 15 12;
# }

# B->12: OK
# Start{
#     1  2  3  4;
#     5  6  7  8;
#     9 10 11 B;
#    13 14 15 12
# }


# B->12, B->8 OK
# Start{
#     1  2  3  4;
#     5  6  7  B;
#     9 10 11  8;
#    13 14 15 12
# }

# B->12, B->8, B->4. OK
# Start{
#     1  2  3  B ;
#     5  6  7  4 ;
#     9 10 11  8 ;
#    13 14 15 12
# }



# from http://www.javaonthebrain.com/java/puzz15/ (Java applet)
# Start {
#     9  2 12  6 ;
#     5  7 14 13 ;
#     3  4  1 11 ;
#    15 10  7  B ;
# }

# Another problem from
# http://www.javaonthebrain.com/java/puzz15/
#
Start{
   9  2 12  6;
   5  7 14 13;
   3  4  1 11;
  15 10  8  B;
}



End{

   1  2  3  4 ;
   5  6  7  8 ;
   9 10 11 12 ;
  13 14 15  B ;

}


##
##
## The operations
##

Trans Move1:Move{
   B v1
=> 
   v1 B
}

Trans Move2:Move{
   v1 B
=> 
   B v1
}


DesObj M_1_2:Move{ a1 a2 }
DesObj M_1_5:Move{ a1 a5 }
DesObj M_2_1:Move{ a2 a1 }
DesObj M_2_3:Move{ a2 a3 }
DesObj M_2_6:Move{ a2 a6 }
DesObj M_3_2:Move{ a3 a2 }
DesObj M_3_4:Move{ a3 a4 }
DesObj M_3_7:Move{ a3 a7 }
DesObj M_4_3:Move{ a4 a3 }
DesObj M_4_8:Move{ a4 a8 }
DesObj M_5_1:Move{ a5 a1 }
DesObj M_5_6:Move{ a5 a6 }
DesObj M_5_9:Move{ a5 a9 }
DesObj M_6_2:Move{ a6 a2 }
DesObj M_6_5:Move{ a6 a5 }
DesObj M_6_7:Move{ a6 a7 }
DesObj M_6_10:Move{ a6 a10 }
DesObj M_7_3:Move{ a7 a3 }
DesObj M_7_6:Move{ a7 a6 }
DesObj M_7_8:Move{ a7 a8 }
DesObj M_7_11:Move{ a7 a11 }
DesObj M_8_4:Move{ a8 a4 }
DesObj M_8_7:Move{ a8 a7 }
DesObj M_8_12:Move{ a8 a12 }
DesObj M_9_5:Move{ a9 a5 }
DesObj M_9_10:Move{ a9 a10 }
DesObj M_9_13:Move{ a9 a13 }
DesObj M_10_6:Move{ a10 a6 }
DesObj M_10_9:Move{ a10 a9 }
DesObj M_10_11:Move{ a10 a11 }
DesObj M_10_14:Move{ a10 a14 }
DesObj M_11_7:Move{ a11 a7 }
DesObj M_11_10:Move{ a11 a10 }
DesObj M_11_12:Move{ a11 a12 }
DesObj M_11_15:Move{ a11 a15 }
DesObj M_12_8:Move{ a12 a8 }
DesObj M_12_11:Move{ a12 a11 }
DesObj M_12_16:Move{ a12 a16 }
DesObj M_13_9:Move{ a13 a9 }
DesObj M_13_14:Move{ a13 a14 }
DesObj M_14_10:Move{ a14 a10 }
DesObj M_14_13:Move{ a14 a13 }
DesObj M_14_15:Move{ a14 a15 }
DesObj M_15_11:Move{ a15 a11 }
DesObj M_15_14:Move{ a15 a14 }
DesObj M_15_16:Move{ a15 a16 }
DesObj M_16_12:Move{ a16 a12 }
DesObj M_16_15:Move{ a16 a15 }
