#
# 15 puzzle in SABR
#
# See http://en.wikipedia.org/wiki/Fifteen_puzzle
# 
# Author: Hakan Kjellerstrand (hakank@bonetmail.com)
#         http://www.hakank.org/index_eng.html
#
# For more about SABR, see http://sabrlang.org/index.html
# 

# Testing with
#  $ cd SABR
#  $ ./sabr 4 -all < ../15_puzzle.tb
#
# Output will be in ./result.out
# 
# For more systematic testing:
# $ perl -e 'for(1..10) { print `./sabr $_ -all < ../15_puzzle.tb`}' 
#


# The symbols
Sym{ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 B }


Board{
   a1  a2  a3  a4 ;
   a5  a6  a7  a8 ;
   a9 a10 a11 a12 ;
  a13 a14 a15 a16 ;
}

#
# Quite easy problem (7 moves)
#
# ./sabr 7 -all < ../15_puzzle.tb
# Start{
#   B  2  3  4;
#   1  6  7  8;
#   5 10 11 12;
#   9 13 14 15;
# }


# B->12, B->8 , B->7, B->3
#  Start{
#     1  2  B  4;
#     5  6  3  7;
#     9 10 11  8;
#    13 14 15 12
#  }



# from http://www.javaonthebrain.com/java/puzz15/ (Java applet)
#  Start {
#     9  2 12  6 ;
#     5  7 14 13 ;
#     3  4  1 11 ;
#    15 10  7  B ;
#  }

# Another problem from
# http://www.javaonthebrain.com/java/puzz15/
#
Start{
  9  2 12  6;
  5  7 14 13;
  3  4  1 11;
 15 10  8  B;
}


End{

   1  2  3  4 ;
   5  6  7  8 ;
   9 10 11 12 ;
  13 14 15  B ;

}


##
##
## The operations
##

# 1  <-> 2 
Trans Move_1_2:Move{
a1 B a3 a4 ;
a5 a6 a7 a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
 => 
B a1 a3 a4 ;
a5 a6 a7 a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
}

# 1  <-> 5 
Trans Move_1_5:Move{
a1 a2 a3 a4 ;
B a6 a7 a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
 => 
B a2 a3 a4 ;
a1 a6 a7 a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
}

# 2  <-> 1 
Trans Move_2_1:Move{
B a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
 => 
a2 B a3 a4 ;
a5 a6 a7 a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
}

# 2  <-> 3 
Trans Move_2_3:Move{
a1 a2 B a4 ;
a5 a6 a7 a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
 => 
a1 B a2 a4 ;
a5 a6 a7 a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
}

# 2  <-> 6 
Trans Move_2_6:Move{
a1 a2 a3 a4 ;
a5 B a7 a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
 => 
a1 B a3 a4 ;
a5 a2 a7 a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
}

# 3  <-> 2 
Trans Move_3_2:Move{
a1 B a3 a4 ;
a5 a6 a7 a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
 => 
a1 a3 B a4 ;
a5 a6 a7 a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
}

# 3  <-> 4 
Trans Move_3_4:Move{
a1 a2 a3 B ;
a5 a6 a7 a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
 => 
a1 a2 B a3 ;
a5 a6 a7 a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
}

# 3  <-> 7 
Trans Move_3_7:Move{
a1 a2 a3 a4 ;
a5 a6 B a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
 => 
a1 a2 B a4 ;
a5 a6 a3 a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
}

# 4  <-> 3 
Trans Move_4_3:Move{
a1 a2 B a4 ;
a5 a6 a7 a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
 => 
a1 a2 a4 B ;
a5 a6 a7 a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
}

# 4  <-> 8 
Trans Move_4_8:Move{
a1 a2 a3 a4 ;
a5 a6 a7 B ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
 => 
a1 a2 a3 B ;
a5 a6 a7 a4 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
}

# 5  <-> 1 
Trans Move_5_1:Move{
B a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
 => 
a5 a2 a3 a4 ;
B a6 a7 a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
}

# 5  <-> 6 
Trans Move_5_6:Move{
a1 a2 a3 a4 ;
a5 B a7 a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
 => 
a1 a2 a3 a4 ;
B a5 a7 a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
}

# 5  <-> 9 
Trans Move_5_9:Move{
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
B a10 a11 a12 ;
a13 a14 a15 a16 ;
 => 
a1 a2 a3 a4 ;
B a6 a7 a8 ;
a5 a10 a11 a12 ;
a13 a14 a15 a16 ;
}

# 6  <-> 2 
Trans Move_6_2:Move{
a1 B a3 a4 ;
a5 a6 a7 a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
 => 
a1 a6 a3 a4 ;
a5 B a7 a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
}

# 6  <-> 5 
Trans Move_6_5:Move{
a1 a2 a3 a4 ;
B a6 a7 a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
 => 
a1 a2 a3 a4 ;
a6 B a7 a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
}

# 6  <-> 7 
Trans Move_6_7:Move{
a1 a2 a3 a4 ;
a5 a6 B a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
 => 
a1 a2 a3 a4 ;
a5 B a6 a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
}

# 6  <-> 10 
Trans Move_6_10:Move{
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 B a11 a12 ;
a13 a14 a15 a16 ;
 => 
a1 a2 a3 a4 ;
a5 B a7 a8 ;
a9 a6 a11 a12 ;
a13 a14 a15 a16 ;
}

# 7  <-> 3 
Trans Move_7_3:Move{
a1 a2 B a4 ;
a5 a6 a7 a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
 => 
a1 a2 a7 a4 ;
a5 a6 B a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
}

# 7  <-> 6 
Trans Move_7_6:Move{
a1 a2 a3 a4 ;
a5 B a7 a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
 => 
a1 a2 a3 a4 ;
a5 a7 B a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
}

# 7  <-> 8 
Trans Move_7_8:Move{
a1 a2 a3 a4 ;
a5 a6 a7 B ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
 => 
a1 a2 a3 a4 ;
a5 a6 B a7 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
}

# 7  <-> 11 
Trans Move_7_11:Move{
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 a10 B a12 ;
a13 a14 a15 a16 ;
 => 
a1 a2 a3 a4 ;
a5 a6 B a8 ;
a9 a10 a7 a12 ;
a13 a14 a15 a16 ;
}

# 8  <-> 4 
Trans Move_8_4:Move{
a1 a2 a3 B ;
a5 a6 a7 a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
 => 
a1 a2 a3 a8 ;
a5 a6 a7 B ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
}

# 8  <-> 7 
Trans Move_8_7:Move{
a1 a2 a3 a4 ;
a5 a6 B a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
 => 
a1 a2 a3 a4 ;
a5 a6 a8 B ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
}

# 8  <-> 12 
Trans Move_8_12:Move{
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 a10 a11 B ;
a13 a14 a15 a16 ;
 => 
a1 a2 a3 a4 ;
a5 a6 a7 B ;
a9 a10 a11 a8 ;
a13 a14 a15 a16 ;
}

# 9  <-> 5 
Trans Move_9_5:Move{
a1 a2 a3 a4 ;
B a6 a7 a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
 => 
a1 a2 a3 a4 ;
a9 a6 a7 a8 ;
B a10 a11 a12 ;
a13 a14 a15 a16 ;
}

# 9  <-> 10 
Trans Move_9_10:Move{
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 B a11 a12 ;
a13 a14 a15 a16 ;
 => 
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
B a9 a11 a12 ;
a13 a14 a15 a16 ;
}

# 9  <-> 13 
Trans Move_9_13:Move{
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 a10 a11 a12 ;
B a14 a15 a16 ;
 => 
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
B a10 a11 a12 ;
a9 a14 a15 a16 ;
}

# 10  <-> 6 
Trans Move_10_6:Move{
a1 a2 a3 a4 ;
a5 B a7 a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
 => 
a1 a2 a3 a4 ;
a5 a10 a7 a8 ;
a9 B a11 a12 ;
a13 a14 a15 a16 ;
}

# 10  <-> 9 
Trans Move_10_9:Move{
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
B a10 a11 a12 ;
a13 a14 a15 a16 ;
 => 
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a10 B a11 a12 ;
a13 a14 a15 a16 ;
}

# 10  <-> 11 
Trans Move_10_11:Move{
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 a10 B a12 ;
a13 a14 a15 a16 ;
 => 
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 B a10 a12 ;
a13 a14 a15 a16 ;
}

# 10  <-> 14 
Trans Move_10_14:Move{
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 a10 a11 a12 ;
a13 B a15 a16 ;
 => 
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 B a11 a12 ;
a13 a10 a15 a16 ;
}

# 11  <-> 7 
Trans Move_11_7:Move{
a1 a2 a3 a4 ;
a5 a6 B a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
 => 
a1 a2 a3 a4 ;
a5 a6 a11 a8 ;
a9 a10 B a12 ;
a13 a14 a15 a16 ;
}

# 11  <-> 10 
Trans Move_11_10:Move{
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 B a11 a12 ;
a13 a14 a15 a16 ;
 => 
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 a11 B a12 ;
a13 a14 a15 a16 ;
}

# 11  <-> 12 
Trans Move_11_12:Move{
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 a10 a11 B ;
a13 a14 a15 a16 ;
 => 
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 a10 B a11 ;
a13 a14 a15 a16 ;
}

# 11  <-> 15 
Trans Move_11_15:Move{
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 a10 a11 a12 ;
a13 a14 B a16 ;
 => 
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 a10 B a12 ;
a13 a14 a11 a16 ;
}

# 12  <-> 8 
Trans Move_12_8:Move{
a1 a2 a3 a4 ;
a5 a6 a7 B ;
a9 a10 a11 a12 ;
a13 a14 a15 a16 ;
 => 
a1 a2 a3 a4 ;
a5 a6 a7 a12 ;
a9 a10 a11 B ;
a13 a14 a15 a16 ;
}

# 12  <-> 11 
Trans Move_12_11:Move{
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 a10 B a12 ;
a13 a14 a15 a16 ;
 => 
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 a10 a12 B ;
a13 a14 a15 a16 ;
}

# 12  <-> 16 
Trans Move_12_16:Move{
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 B ;
 => 
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 a10 a11 B ;
a13 a14 a15 a12 ;
}

# 13  <-> 9 
Trans Move_13_9:Move{
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
B a10 a11 a12 ;
a13 a14 a15 a16 ;
 => 
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a13 a10 a11 a12 ;
B a14 a15 a16 ;
}

# 13  <-> 14 
Trans Move_13_14:Move{
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 a10 a11 a12 ;
a13 B a15 a16 ;
 => 
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 a10 a11 a12 ;
B a13 a15 a16 ;
}

# 14  <-> 10 
Trans Move_14_10:Move{
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 B a11 a12 ;
a13 a14 a15 a16 ;
 => 
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 a14 a11 a12 ;
a13 B a15 a16 ;
}

# 14  <-> 13 
Trans Move_14_13:Move{
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 a10 a11 a12 ;
B a14 a15 a16 ;
 => 
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 a10 a11 a12 ;
a14 B a15 a16 ;
}

# 14  <-> 15 
Trans Move_14_15:Move{
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 a10 a11 a12 ;
a13 a14 B a16 ;
 => 
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 a10 a11 a12 ;
a13 B a14 a16 ;
}

# 15  <-> 11 
Trans Move_15_11:Move{
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 a10 B a12 ;
a13 a14 a15 a16 ;
 => 
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 a10 a15 a12 ;
a13 a14 B a16 ;
}

# 15  <-> 14 
Trans Move_15_14:Move{
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 a10 a11 a12 ;
a13 B a15 a16 ;
 => 
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 a10 a11 a12 ;
a13 a15 B a16 ;
}

# 15  <-> 16 
Trans Move_15_16:Move{
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 a10 a11 a12 ;
a13 a14 a15 B ;
 => 
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 a10 a11 a12 ;
a13 a14 B a15 ;
}

# 16  <-> 12 
Trans Move_16_12:Move{
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 a10 a11 B ;
a13 a14 a15 a16 ;
 => 
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 a10 a11 a16 ;
a13 a14 a15 B ;
}

# 16  <-> 15 
Trans Move_16_15:Move{
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 a10 a11 a12 ;
a13 a14 B a16 ;
 => 
a1 a2 a3 a4 ;
a5 a6 a7 a8 ;
a9 a10 a11 a12 ;
a13 a14 a16 B ;
}



DesObj M:Move{   a1  a2  a3  a4;
                 a5  a6  a7  a8;
                 a9 a10 a11 a12;
                a13 a14 a15 a16
}

