#
# 3 jugs problem in SABR
#
# A.k.a. water jugs problem.
# Problem from Taha 'Introduction to Operations Research',
# page 245f .
# 
# Also see Cut the Knot!: 
# http://www.cut-the-knot.org/ctk/Water.shtml
#
#
# Author: Hakan Kjellerstrand (hakank@bonetmail.com)
#         http://www.hakank.org/index_eng.html
#
# For more about SABR, see http://sabrlang.org/index.html
# 

# Testing with
#  $ cd SABR
#  $ ./sabr 4 -all ../3_jugs.tb
#
# Output will be in ./result.out
# 
# For more systematic testing:
# $ perl -e 'for(1..10) { print `./sabr $_ -all < ../3_jugs.tb`}' 
#
# Result (in ./result.out), slightly edited
#   8 0 0 
#   P02 P
#   3 5 0 
#   P13 P
#   3 2 3 
#   P15 P
#   6 2 0 
#   P16 P
#   6 0 2 
#   P18 P
#   1 5 2 
#   P19 P
#   1 4 3 
#   P21 P
#   4 4 0 



# The symbols
Sym{ 0 1 2 3 4 5 6 7 8 }


Board{
  a0 a1 a2
}


Start{
   8 0 0
}


End{
  4 4 0
}

# The operations
Trans P01:Pour{ 8 0 0 => 5 0 3 }
Trans P02:Pour{ 8 0 0 => 3 5 0 }
Trans P03:Pour{ 5 0 3 => 5 3 0 }
Trans P04:Pour{ 5 3 0 => 2 3 3 }
Trans P05:Pour{ 5 3 0 => 3 5 0 }
Trans P06:Pour{ 2 3 3 => 2 5 1 }
Trans P07:Pour{ 2 5 1 => 7 0 1 }
Trans P08:Pour{ 2 5 1 => 3 5 0 }
Trans P09:Pour{ 7 0 1 => 7 1 0 }
Trans P10:Pour{ 7 1 0 => 4 1 3 }
Trans P11:Pour{ 7 1 0 => 3 5 0 }
Trans P12:Pour{ 4 1 3 => 1 4 3 }
Trans P13:Pour{ 3 5 0 => 3 2 3 }
Trans P14:Pour{ 3 2 3 => 5 0 3 }
Trans P15:Pour{ 3 2 3 => 6 2 0 }
Trans P16:Pour{ 6 2 0 => 6 0 2 }
Trans P17:Pour{ 6 0 2 => 5 0 3 }
Trans P18:Pour{ 6 0 2 => 1 5 2 }
Trans P19:Pour{ 1 5 2 => 1 4 3 }
Trans P20:Pour{ 1 4 3 => 5 0 3 }
Trans P21:Pour{ 1 4 3 => 4 4 0 }


DesObj P:Pour{a0 a1 a2 }

