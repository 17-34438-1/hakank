/*

  Problem 2
  http://projecteuler.net/index.php?section=problems&id=2

  """
  Each new term in the Fibonacci sequence is generated by adding the previous two 
  terms. By starting with 1 and 2, the first 10 terms will be:

  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

  Find the sum of all the even-valued terms in the sequence which do not exceed 
  four million.
  """
  
  Answer: 4613732

*/

:- lib(lists).
:- lib(listut).
:- lib(util).
:- lib(ic).
:- lib(ic_global).
:- lib(ic_search).

filter(P, List1, List2) :-
        (
            foreach(X,List1), 
            fromto(List2,Out,In,[]), 
            param(P) 
        do applyP(P, X) -> 
                Out = [X|In] ; Out=In
        ).

applyP(P, Xs) :- Query =.. [P,Xs], Query.

/* 
% this is too slow
fib(1,1).
fib(2,1).
fib(X,Y) :-
        X > 2,
        X1 is X - 1,
        X2 is X - 2,
        fib(X1, Y1),
        fib(X2, Y2),
        Y is Y1 + Y2.
*/


% Faster:
% From 
% http://coding.derkeiler.com/Archive/Prolog/comp.lang.prolog/2003-11/0188.html
%
fib(0,1).
fib(1,1).
fib(N,F) :- N > 1, fib(N,1,1,F).

fib(2,F1,F2,F) :- 
        F is F1 + F2.
fib(N,F1,F2,F) :- 
        N > 2, 
        N1 is N - 1, 
        NF1 is F1 + F2,
        fib(N1,NF1,F1,F). 

odd(N) :- M is N mod 2, M = 1.
even(N) :- M is N mod 2, M = 0.
% parity(N,M) :- M is N mod 2.


% This generates a list of all fib numbers < 4000000
p2(Total) :-
        p2(1, 1, Total), !.
p2(_, F, _) :- F > 4000000, !.
p2(C, _, [F2|Total]) :-
        fib(C, F2),
        C2 is C + 1,        
        p2(C2, F2, Total).

% More direct solution.
% ok (0.0s)
problem2 :-
        p2(Total),
        ( foreach(F,Total),
          fromto(0,In,Out,Sum) do
              0 is F mod 2 ->
              Out is In + F
        ;
              Out = In
        ),
        writeln(Sum).

% ok (0.0s)
problem2a :-
        p2(Total),
        filter(even, Total, Includes),
        ic_global:sumlist(Includes, SumList),
        writeln(SumList).


% variant of p2/1 where we just takes the 
% even valued Fib numbers <= 4000000
p2b(Total) :-
        p2b(1, 1, Total).
p2b(_, F, _) :- 
        F > 4000000, !.
p2b(C, _, [F2|Total]) :-
        fib(C, F2),
        0 is F2 mod 2,
        C2 is C + 1,        
        p2b(C2, F2, Total).
p2b(C, _, Total) :-
        fib(C, F2),
        1 is F2 mod 2,
        C2 is C + 1,        
        p2b(C2, F2, Total).

problem2b :-
        p2b(Total),
        ic_global:sumlist(Total,Sum),
        writeln(Sum).


go :-
        writeln('problem2'),
        time(problem2),
        writeln('problem2a'),
        time(problem2a),
        writeln('problem2b'),
        time(problem2b).