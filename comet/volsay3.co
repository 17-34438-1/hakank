/*
  Volsay problem  in Comet

  From OPL model gas.mod
  Now with array and data in arrays/matrix.

  This Comet model was created by Hakan Kjellerstrand (hakank@bonetmail.com)
  Also, see my Comet page: http://www.hakank.org/comet 

 */

import cotln;
int t0 = System.getCPUTime();

Solver<LP> m();

enum Products = {gas, chloride};
enum Components = {nitrogen, hydrogen, chlorine};

float Demand[Products, Components] = [ [1,3,0], [1,4,1]];
float Profit[Products] = [30,40];
float Stock[Components] = [50,180,40];

var<LP>{float} Production[Products](m);

maximize<m> 
sum(p in Products)
   Profit[p]*Production[p]
subject to {

   forall(c in Components)
     m.post(sum(p in Products) 
            Demand[p,c]* Production[p] <= Stock[c]);

} 

forall(p in Products) {
  cout << p << ": " << Production[p].getValue() << endl;
}

cout << "m.getObjectiveValue(): " << m.getObjectiveValue() << endl;

int t1 = System.getCPUTime();
cout << "time:      " << (t1-t0) << endl;
cout << "#choices = " << m.getNChoice() << endl;
cout << "#fail    = " << m.getNFail() << endl;


