/*
   SEND + MOST = MONEY in Comet

   Alphametic problem were we maximize MONEY.
   
   Problem from the lecture notes:
   http://www.ict.kth.se/courses/ID2204/notes/L01.pdf

 */

import cotfd;

int t0 = System.getCPUTime();

range Digits = 0..9;

Solver<CP> m();

var<CP>{int} S(m,Digits);
var<CP>{int} E(m,Digits);
var<CP>{int} N(m,Digits);
var<CP>{int} D(m,Digits);
var<CP>{int} M(m,Digits);
var<CP>{int} O(m,Digits);
var<CP>{int} T(m,Digits);
var<CP>{int} Y(m,Digits);

var<CP>{int} x[1..8];
x[1]=S; x[2]=E; x[3]=N; x[4]=D;
x[5]=M; x[6]=O; x[7]=T; x[8]=Y;

var<CP>{int} MONEY(m, 0..100000);

Integer num_solutions(0);

// exploreall<m> {
maximize<m> MONEY subject to {
  
  m.post(MONEY == 10000 * M + 1000 * O + 100 * N + 10 * E + Y);
  m.post(alldifferent(x));
  m.post(M != 0);
  m.post(S != 0);
  m.post(                 1000 * S + 100 * E + 10 * N + D +
                          1000 * M + 100 * O + 10 * S + T ==  MONEY);

  // for exploreall:
  // m.post(MONEY == 10876);

  
} using {
  
  forall(i in 1..8 : !x[i].bound())  by (-x[i].getSize()) {
    label(x[i]);
  }
  
  labelFF(m);
  
  cout << "x: " << x << " MONEY: " << MONEY << endl;
  
  num_solutions := num_solutions + 1;
}


cout << x << endl;
cout << "MONEY: " << MONEY << endl;


cout << "\nnum_solutions: " << num_solutions << endl;
    
int t1 = System.getCPUTime();
cout << "time:      " << (t1-t0) << endl;
cout << "#choices = " << m.getNChoice() << endl;
cout << "#fail    = " << m.getNFail() << endl;
cout << "#propag  = " << m.getNPropag() << endl;

