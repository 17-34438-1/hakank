/*

  Cryptarithmetic puzzle in Comet.

  Prolog benchmark problem GNU Prolog (crypta.pl)
  """
  Name           : crypta.pl                                              
  Title          : crypt-arithmetic                                       
  Original Source: P. Van Hentenryck's book                               
  Adapted by     : Daniel Diaz - INRIA France                             
  Date           : September 1992                                         
                                                                         
  Solve the operation:                                                    
                                                                        
     B A I J J A J I I A H F C F E B B J E A                              
   + D H F G A B C D I D B I F F A G F E J E                              
   -----------------------------------------                              
   = G J E G A C D D H F A F J B F I H E E F                              
  """
 


  This Comet model was created by Hakan Kjellerstrand (hakank@bonetmail.com)
  Also, see my Comet page: http://www.hakank.org/comet 

 */

import cotfd;

int t0 = System.getCPUTime();

range r = 0..9;

Solver<CP> m();
var<CP>{int} A(m, r);
var<CP>{int} B(m, r);
var<CP>{int} C(m, r);
var<CP>{int} D(m, r);
var<CP>{int} E(m, r);
var<CP>{int} F(m, r);
var<CP>{int} G(m, r);
var<CP>{int} H(m, r);
var<CP>{int} I(m, r);
var<CP>{int} J(m, r);

var<CP>{int} LD[1..10](m, r);
LD[1] = A; LD[2] = B; LD[3] = C; LD[4] = D; LD[5] = E; 
LD[6] = F; LD[7] = G; LD[8] = H; LD[9] = I; LD[10] = J; 

var<CP>{int} Sr1(m, 0..1);
var<CP>{int} Sr2(m, 0..1);



Integer num_solutions(0);

exploreall<m> {

  m.post(alldifferent(LD));
  m.post(B >= 1);
  m.post(D >= 1);
  m.post(G >= 1);
  m.post(A+10*E+100*J+1000*B+10000*B+100000*E+1000000*F+
         E+10*J+100*E+1000*F+10000*G+100000*A+1000000*F
         == F+10*E+100*E+1000*H+10000*I+100000*F+1000000*B+10000000*Sr1);

      
  m.post(C+10*F+100*H+1000*A+10000*I+100000*I+1000000*J+
         F+10*I+100*B+1000*D+10000*I+100000*D+1000000*C+Sr1
         == J+10*F+100*A+1000*F+10000*H+100000*D+1000000*D+10000000*Sr2);


  m.post(A+10*J+100*J+1000*I+10000*A+100000*B+
         B+10*A+100*G+1000*F+10000*H+100000*D+Sr2
         == C+10*A+100*G+1000*E+10000*J+100000*G);


  labelFF(m);

} using {
      

  labelFF(m);

  num_solutions := num_solutions + 1;

      
  cout << LD << endl;

}

// cout << x << endl;
cout << "\nnum_solutions: " << num_solutions << endl;
    
int t1 = System.getCPUTime();
cout << "time:      " << (t1-t0) << endl;
cout << "#choices = " << m.getNChoice() << endl;
cout << "#fail    = " << m.getNFail() << endl;
cout << "#propag  = " << m.getNPropag() << endl;

