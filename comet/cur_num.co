/*

  Curious number puzzle in Comet.

  From Martin Henz' collection of puzzles
  http://www.comp.nus.edu.sg/~henz/projects/puzzles/arith/#curious
  """
    Curious Numbers from "Amusements in Mathematics, Dudeney", number 114.
 
    The number 48 has this peculiarity, that if you add 1 to it the result
    is a square number, and if you add 1 to its half, you also get a
    square number. Now, there is no limit to the numbers that have this
    peculiarity, and it is an interesting puzzle to find three more of
    them---the smallest possible numbers. What are they?
  """
  

  This Comet model was created by Hakan Kjellerstrand (hakank@bonetmail.com)
  Also, see my Comet page: http://www.hakank.org/comet 

 */

import cotfd;

int t0 = System.getCPUTime();

int up = 400000000; // upper range limit
Solver<CP> m();

var<CP>{int} X(m,1..up);
var<CP>{int} A(m, 1..up);
var<CP>{int} B(m,1..up);
var<CP>{int} C(m,1..up);
var<CP>{int} D(m,1..up);
var<CP>{int} E(m,1..up);

Integer num_solutions(0);

exploreall<m> {

  m.post(X + 1 == A); // if you add 1 to it
  m.post(A == B * B); // the result is a square number
  m.post(X == 2 * C); // if you to its half
  m.post(C + 1 == D); // add 1
  m.post(D == E * E); // you also get a square number


} using {
      
  labelFF(m);

  num_solutions := num_solutions + 1;

  cout << X << " " << A << " " << B << " " << C << " " << D << " " << E << endl;

}

cout << "\nnum_solutions: " << num_solutions << endl;
    
int t1 = System.getCPUTime();
cout << "time:      " << (t1-t0) << endl;
cout << "#choices = " << m.getNChoice() << endl;
cout << "#fail    = " << m.getNFail() << endl;
cout << "#propag  = " << m.getNPropag() << endl;

