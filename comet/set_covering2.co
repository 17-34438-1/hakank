/*

  Set covering in Comet.

  Example 9.1-2, page 354ff, from Taha "Operations Research - An Introduction"
  Minimize the number of security telephones in street corners on a campus.

  See also:
  * Taha's AMPL model: http://taha.ineg.uark.edu/setcover.txt
  * MiniZinc model: http://www.hakank.org/minizinc/set_covering2.mzn


  This Comet model was created by Hakan Kjellerstrand (hakank@bonetmail.com)
  Also, see my Comet page: http://www.hakank.org/comet 

 */

import cotfd;

int t0 = System.getCPUTime();

int n = 8;   // maximum number of corners
int num_streets = 11; // number of connected streets
range streets = 1..num_streets;


// corners of each street
set{int} corner[streets] = 
[
 {1,2},
 {2,3},
 {4,5},
 {7,8},
 {6,7},
 {2,6},
 {1,6},
 {4,7},
 {2,4},
 {5,8},
 {3,5}
 ];


Solver<CP> m();

var<CP>{int} x[1..n](m, 0..1);
var<CP>{int} z(m, 0..n); 


Integer num_solutions(0);

// exploreall<m> {
minimize<m> z subject to {

  m.post(z == sum(j in 1..n) (x[j]));

  forall(i in streets)
    m.post(sum(j in corner[i]) (x[j])>=1);
  
} using {
      
  label(m);

  num_solutions := num_solutions + 1;
      
  cout << x << " z: " << z << endl;

}

cout << "\nnum_solutions: " << num_solutions << endl;
    
int t1 = System.getCPUTime();
cout << "time:      " << (t1-t0) << endl;
cout << "#choices = " << m.getNChoice() << endl;
cout << "#fail    = " << m.getNFail() << endl;
cout << "#propag  = " << m.getNPropag() << endl;

