/*
  Simple diet probblem in Comet
  
  Standard Operations Research example in Comet.

  Minimize the cost for the products:
  Type of                        Calories   Chocolate    Sugar    Fat
  Food                                      (ounces)     (ounces) (ounces)
  ------------------------------------------------------------------------
  Chocolate Cake (1 slice)       400           3            2      2
  Chocolate ice cream (1 scoop)  200           2            2      4
  Cola (1 bottle)                150           0            4      1
  Pineapple cheesecake (1 piece) 500           0            4      5


  Compare with other models:
   
  * MiniZinc: http://www.hakank.org/minizinc/diet1.mzn
  * Choco:    http://www.hakank.org/gecode_r/Choco.java
  * JaCoP:    http://www.hakank.org/gecode_r/Diet.java
  * Gecode/R: http://www.hakank.org/gecode_r/diet.rb
  * Excel/OpenOffice Scalc: http://www.hakank.org/oocalc_excel/diet.xls


  Comet model created by Hakan Kjellerstrand, hakank@bonetmail.com
  See also my Comet page: http://www.hakank.org/comet/

 */

int t0 = System.getCPUTime();

import cotfd;
int n = 4;
int p = 4;

Solver<CP> m();
int price[1..n] = [50, 20, 30, 80]; // in cents

int limits [1..p]   = [500, 6,10,8];

int calories[1..n]  = [400, 200, 150, 500];
int chocolate[1..n] = [3,2,0,0];
int sugar[1..n]     = [2,2,4,4];
int fat[1..n]       = [2,4,1,5];

var<CP>{int} x[i in 1..n](m, 0..1000);
var<CP>{int} cost(m,0..10000);

minimize<m> cost subject to {

  m.post(cost == sum(i in 1..n) price[i]*x[i]);

  m.post(sum(i in 1..n) (x[i]*calories[i])  >= limits[1]);
  m.post(sum(i in 1..n) (x[i]*chocolate[i]) >= limits[2]);
  m.post(sum(i in 1..n) (x[i]*sugar[i])     >= limits[3]);
  m.post(sum(i in 1..n) (x[i]*fat[i])       >= limits[4]);
  
} using {

  labelFF(x);
  label(cost);

}
 
int t1 = System.getCPUTime();
cout << "cost: " << cost << endl;
cout << "x: " << x << endl;
cout << "time:      " << (t1-t0) / 1000.0 << endl;
cout << "#choices = " << m.getNChoice() << endl;
cout << "#fail    = " << m.getNFail() << endl;
cout << "#propag  = " << m.getNPropag() << endl;
