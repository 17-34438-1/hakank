/*

  Recreational mathematics in Comet.

  From Pascal Van Henrentyck "The OPL Optimization Programming Language", 
  page 32:
  """
  Consider finding an eight digit number that is a square and remains a square
  when 1 is concatenated in front of its decimal notation.
  """

  There are two solutions:

    n = 23765625
    x = 4875
    y = 11125

    n = 56250000
    x = 7500
    y = 12500


  This Comet model was created by Hakan Kjellerstrand (hakank@bonetmail.com)
  Also, see my Comet page: http://www.hakank.org/comet 

*/

import cotfd;

int t0 = System.getCPUTime();

Solver<CP> m();

var<CP>{int} n(m, 10000000..99999999);
var<CP>{int} x(m, 0..20000);
var<CP>{int} y(m, 0..20000);


Integer num_solutions(0);

exploreall<m> {

  m.post(n == x*x);
  m.post(100000000+n ==y*y);


} using {
      
  labelFF(m);

  num_solutions++;

      
  cout << "n = " << n << endl;
  cout << "x = " << x << endl;
  cout << "y = " << y << endl;
  cout << endl;

}

cout << "\nnum_solutions: " << num_solutions << endl;
    
int t1 = System.getCPUTime();
cout << "time:      " << (t1-t0) << endl;
cout << "#choices = " << m.getNChoice() << endl;
cout << "#fail    = " << m.getNFail() << endl;
cout << "#propag  = " << m.getNPropag() << endl;

