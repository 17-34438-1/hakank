/*
  Converts array <-> number in Comet

  This Comet model was created by Hakan Kjellerstrand (hakank@bonetmail.com)
  Also, see my Comet page: http://www.hakank.org/comet 

 */

import cotfd;
int t0 = System.getCPUTime();

int n=6;
int base = 10;
range Digits = 0..base-1;

Solver<CP> m();
var<CP>{int} x[i in 1..n](m, Digits);
var<CP>{int} z(m, 0..100000);


/*
// This version cannot handle slices
function void toNum(Solver<CP> m, var<CP>{int}[] x, var<CP>{int} num, int base) {
  m.post(num == sum(i in 1..x.getSize()) 
         base^(x.getSize()-i)*x[i]
         );
}
*/


//
// This is more general than the version above since it handles slices
//
function void toNum(Solver<CP> m, var<CP>{int}[] x, var<CP>{int} num, int base) {
  int start = x.getLow();
  int end = x.getHigh();
  m.post(num == sum(i in start..end) 
         base^(end-i)*x[i]
         );
}


Integer num_solutions(0);
exploreall<m> {

  toNum(m, x, z, base);
  m.post(z == 123);

  } using {
      
    label(m);

    num_solutions := num_solutions + 1;
    
    cout << "x: " << x << " z: " << z << " (base " << base << ")" << endl;

}

cout << x << endl;
cout << "\nnum_solutions: " << num_solutions << endl;
    
int t1 = System.getCPUTime();
cout << "time:      " << (t1-t0) << endl;
cout << "#choices = " << m.getNChoice() << endl;
cout << "#fail    = " << m.getNFail() << endl;
cout << "#propag  = " << m.getNPropag() << endl;

