/*

  XKCD problem (knapsack) in Comet

  http://xkcd.com/287/

  Some amount (or none) of each dish should be ordered to give a total 
  of exact 15.05


 Model created by Hakan Kjellerstrand, hakank@bonetmail.com
 See also my Comet page: http://www.hakank.org/comet

*/

import cotfd;

int t0 = System.getCPUTime();

Solver<CP> m();

int n = 6;
range R = 1..n;
int price[R] = [215, 275, 335, 355, 420, 580]; // integer version
int total = 1505;

var<CP>{int} x[i in R](m,0..100);
var<CP>{int} s(m, 0..20000); // not need but we may want to experiment...
var<CP>{int} num_dishes(m, 0..20000);

Integer num_solutions(0);

solveall<m> {
// maximize<m> num_dishes subject to  {

  // the sum of the dishes
  m.post(s == sum(i in R) x[i]*price[i]); 
  m.post(s == total);

  // number of dishes
  m.post(num_dishes == sum(i in R) x[i]);

} using {

  // forall(i in 1..n : !x[i].bound()) {  // by (-x[i].getSize()) {
  //  label(x[i]);
  // }

  labelFF(x);
  label(num_dishes);
  label(s);

  cout << x << " sum: " << s << " num_dishes: " << num_dishes << endl;

  num_solutions := num_solutions + 1;
}
  

int t1 = System.getCPUTime();
cout << "num_solutions: " << num_solutions << endl;
cout << "time:      " << (t1-t0) / 1000.0 << endl;
cout << "#choices = " << m.getNChoice() << endl;
cout << "#fail    = " << m.getNFail() << endl;
cout << "#propag  = " << m.getNPropag() << endl;
