/*

  Grocery problem in Comet.


  From  Christian Schulte, Gert Smolka, Finite Domain
  http://www.mozart-oz.org/documentation/fdt/
  Constraint Programming in Oz. A Tutorial. 2001.
  """
  A kid goes into a grocery store and buys four items. The cashier
  charges $7.11, the kid pays and is about to leave when the cashier
  calls the kid back, and says "Hold on, I multiplied the four items
  instead of adding them; I'll try again; Hah, with adding them the
  price still comes to $7.11''. What were the prices of the four items?
  """

  This Comet model was created by Hakan Kjellerstrand (hakank@bonetmail.com)
  Also, see my Comet page: http://www.hakank.org/comet 

*/

import cotfd;

int t0 = System.getCPUTime();

Solver<CP> m();
var<CP>{int} item[0..3](m, 1..711);
var<CP>{int} x(m, 1..711);



Integer num_solutions(0);

exploreall<m> {

  m.post(alldifferent(item));

  m.post(item[1] <= item[2]);
  m.post(item[2] <= item[3]);

  m.post(item[0] + item[1] + item[2] + item[3] == 711);
  m.post(item[0] * item[1] * item[2] * item[3] == 711 * 100*100*100);

  m.post(x * 79 == item[0]);


} using {
      
  // labelFF(m);
  forall(i in 0..3 : !item[i].bound()) by (item[i].getSize()) {
    label(item[i]);
  }

  num_solutions++;

  cout << item << endl;      

}

cout << "\nnum_solutions: " << num_solutions << endl;
    
int t1 = System.getCPUTime();
cout << "time:      " << (t1-t0) << endl;
cout << "#choices = " << m.getNChoice() << endl;
cout << "#fail    = " << m.getNFail() << endl;
cout << "#propag  = " << m.getNPropag() << endl;

