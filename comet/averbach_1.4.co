/*

  Recreational Mathematics in Comet.

  Problem 1.4 from 
  Averbach & Chein "Problem Solving Through Recreational Mathematics"
  """
  Messr Baker, Dyer, Farmer, Glover, and Hosier are seated around a circular table,
  playing poker. Each gentleman is the namesake of the profession of one of the others.

  The dyer is seated two places to the left of Mr Hosier.
  The baker sits two places to Mr Baker's right.
  The farmer is seated to the left of Mr Farmer.
  Mr Dyer is on the glover's right.

  What is the name of the dyer?
  """

  Compare with the following models:
  * MiniZinc: http://hakank.org/minizinc/averbach_1.4.mzn
  * ECLiPSe: http://hakank.org/eclipse/averbach_1.4.ecl
  * SICStus Prolog: http://hakank.org/sicstus/averbach_1.4.pl
  * Gecoge: http://hakank.org/gecode/averbach_1.4.cpp

  This Comet model was created by Hakan Kjellerstrand (hakank@bonetmail.com)
  Also, see my Comet page: http://www.hakank.org/comet 

*/

import cotfd;
int t0 = System.getCPUTime();

range R = 0..4;


Solver<CP> m();

string names_str[R] = ["Baker", "Dyer", "Farmer", "Glover", "Hosier"];

// Names
// Numbering the names and professions as 0..4 
// so we easily can use modulo 5.
var<CP>{int} Baker(m,R);
var<CP>{int} Dyer(m,R);
var<CP>{int} Farmer(m,R);
var<CP>{int} Glover(m,R);
var<CP>{int} Hosier(m,R);

// Profession
var<CP>{int} baker(m,R);
var<CP>{int} dyer(m,R);
var<CP>{int} farmer(m,R);
var<CP>{int} glover(m,R);
var<CP>{int} hosier(m,R);

var<CP>{int} names[R] = [Baker, Dyer, Farmer, Glover, Hosier];
var<CP>{int} professions[R] = [baker, dyer, farmer, glover, hosier];


Integer num_solutions(0);
// explore<m> {
exploreall<m> {
// minimize<m> z subject to {

  m.post(alldifferent(names));
  m.post(alldifferent(professions));

  // Symmetry breaking
  m.post(Baker == 1);

  m.post(baker  != Baker);
  m.post(dyer   != Dyer);
  m.post(farmer != Farmer);
  m.post(glover != Glover);
  m.post(hosier != Hosier);
  // The dyer is seated two places to the left of Mr Hosier.
  m.post(dyer == (Hosier - 2) % 5);
  // The baker sits two places to Mr Baker's right.
  m.post(baker == (Baker + 2) % 5);
  // The farmer is seated to the left of Mr Farmer.
  m.post(farmer == (Farmer - 1) % 5);
  // Mr Dyer is on the glover's right.
  m.post(Dyer == (glover + 1) % 5);

} using {
      
  labelFF(m);
  num_solutions++;

      
  cout << names << endl;
  cout << professions << endl;  
  cout << "Mr " << names_str[dyer] << " is the dyer." << endl;


}

cout << "\nnum_solutions: " << num_solutions << endl;
    
int t1 = System.getCPUTime();
cout << "time:      " << (t1-t0) << endl;
cout << "#choices = " << m.getNChoice() << endl;
cout << "#fail    = " << m.getNFail() << endl;
cout << "#propag  = " << m.getNPropag() << endl;

