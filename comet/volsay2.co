/*
  Volsay problem  in Comet

  From OPL model volsay.mod.
  Now with array.

  This Comet model was created by Hakan Kjellerstrand (hakank@bonetmail.com)
  Also, see my Comet page: http://www.hakank.org/comet 

 */

import cotln;
int t0 = System.getCPUTime();

Solver<LP> m();

enum Products = {gas, chloride};
var<LP>{float} production[Products](m);

maximize<m> 
40 * production[gas] + 50 * production[chloride]
subject to {

  m.post(production[gas] + production[chloride] <= 50);
  m.post(3 * production[gas] + 4 * production[chloride] <= 180);
  m.post(production[chloride] <= 40);

} 

forall(p in Products) {
  cout << p << ": " << production[p].getValue() << endl;
}

cout << "m.getObjectiveValue(): " << m.getObjectiveValue() << endl;

int t1 = System.getCPUTime();
cout << "time:      " << (t1-t0) << endl;
cout << "#choices = " << m.getNChoice() << endl;
cout << "#fail    = " << m.getNFail() << endl;


