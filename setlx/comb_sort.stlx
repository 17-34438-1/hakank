// 
// Comb sort in SETL
//
// See
//   * http://en.wikipedia.org/wiki/Comb_sort
//   * http://rosettacode.org/wiki/Comb_sort

// This SETL program was created by Hakan Kjellerstrand (hakank@bonetmail.com)
// Also see my SETL page: http://www.hakank.org/setl/
//

//
// quite similar to the pseudo code given
// at Wikipedia/Rosetta code
//
combsort := procedure(rw input) {
  gap := #input; //initialize gap size
  while (gap > 1 || swaps != 0) {
    gap := int(gap / 1.25);
    i := 1;
    swaps := 0;
    while (i + gap <= #input) {
      if (input[i] > input[i+gap]) {
        [input[i], input[i+gap]] := [input[i+gap], input[i]];
        swaps := 1;
      }
      i += 1;
    }
  }
};



lst := [23, 76, 99, 58, 97, 57, 35, 89, 51, 38, 95, 92, 24, 46, 31, 24, 14, 12, 57, 78];
print(lst);
combsort(lst);
print(lst);

lst:=[rnd([1..100]) : i in [1..100000]];
time0 := now();
combsort(lst);
print("It took ", (now()-time0)/1000.0," seconds to sort ", #lst, " numbers");


