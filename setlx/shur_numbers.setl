--
-- (Simplified) Shur numbers in SETL
--
-- Inspired from the {log} example:
-- http://www.math.unipr.it/~gianfr/SETLOG/SamplePrograms/Shur.slog
-- """
-- (Simplified) Shur numbers problem.
--  Find all subsets S of {1,...,N} such that, for each pair of
-- (not necessarily distinct) numbers in S, their sum is not in S
-- """
--
-- This SETL program was written by Hakan Kjellerstrand (hakank@bonetmail.com).
-- See also my SETL page: http://www.hakank.org/setl/ .
-- 

n := 5; 
res := shur(n); 
print(res);
print("card: ", #res);

-- compact version
proc shur(n);
  ss := {1..n};
  return {s in pow(ss) | forall x in s | forall y in s | x+y notin s};
end proc;


-- first version
proc shur1(n);
  ss := {1..n};
  res := {};
  for s in pow(ss) loop 
       if forall x in s | forall y in s | x+y notin s  then  
          res with := s; 
       end if; 
   end loop; 
  return res;
end proc;

