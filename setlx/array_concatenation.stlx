// 
// Array concatenation in SETL.
// 
// From http://rosettacode.org/wiki/Array_concatenation
// """
// Show how to concatenate two arrays in your language. If this is as 
// simple as array1 + array2, so be it. 
// """

// This SETL program was created by Hakan Kjellerstrand (hakank@bonetmail.com)
// Also see my SETL page: http://www.hakank.org/setl/
//


// a concatenate procedure (for whatever reason)
concat := [a1,a2] |-> [] + a1 + a2;


a1 := [1..10];
a2 := [11..20];

// the built-in "+" concatenates (if in List context)
a := a1 + a2;
print("a: $a$");

b := concat(a1, a2);
print("b: $b$");

c1 := [1..7];
c2 := [8..13];
c3 := [14..20];

// combine concatenation
c := concat(c1,concat(c2,c3));
print("c: $c$");

d := c1 + c2 +c3;
print("d: $d$");
//
// however, using a "compound operator" is easier
e := +/[c1,c2,c3];
print("e: $e$");


// In SetlX you can't define your own operators for compound
// operators (which is possible in other SETL's). 
// So this _don't_ work:
//    concat/[c1,c2,c3];
// 
