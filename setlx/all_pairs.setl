#!/usr/bin/env setl
-- 
-- all_pairs (is_tuple) in SETL
--
-- Example from {log}
-- http://prmat.math.unipr.it/~gianfr/SETLOG/SamplePrograms/AllPairs.slog
-- """
-- Check whether all elements of a set S are pairs, 
--  i.e., they have the form [x1,x2], for any x1 and x2
-- """
--
-- This SETL program was created by Hakan Kjellerstrand (hakank@bonetmail.com)
-- Also see my SETL page: http://www.hakank.org/setl/
--



S1 := {["peter","ann"],["tom","mary"],["john","ann"]};
S2 := {["peter"],["tom","mary"],["john","ann"]};
S3 := {[],["tom","mary"],["john","ann"]};
S4 := {["peter","ann","kathy"],["tom","mary"],["john","ann"]};
S5 := {[om,"peter"],["tom","mary"],["john","ann"]};

print("using all_pairs()");
for s in [S1,S2,S3,S4,S5] loop
  print(s,all_pairs(s));
end loop;

-- using the built in "is_map"
print("\nusing is_map()");
for s in [S1,S2,S3,S4,S5] loop
  print(s,is_map(s));
end loop;

-- the {log} version:
-- all_pairs(S) :- 
--         forall(X in S, exists([X1,X2], X = [X1,X2])).
proc all_pairs(S);
  return forall x in S | is_tuple(x) and #x = 2 and x(1) /= om and x(2) /= om;
end proc;
