#!/usr/bin/env setl
-- 
-- 99 bottles of beer in SETL
-- 
-- From
-- http://rosettacode.org/wiki/99_Bottles_of_Beer
-- """
-- 99 Bottles of Beer

-- In this puzzle, write code to print out the entire "99 bottles of 
-- beer on the wall" song. For those who do not know the song, the lyrics 
-- follow this form:
--
-- X bottles of beer on the wall
-- X bottles of beer
-- Take one down, pass it around
-- X-1 bottles of beer on the wall
--
-- X-1 bottles of beer on the wall
-- ...
-- Take one down, pass it around
-- 0 bottles of beer on the wall
--
-- Where X and X-1 are replaced by numbers of course. Grammatical support for 
-- "1 bottle of beer" is optional. As with any puzzle, try to do it in as 
-- creative/concise/comical a way as possible (simple, obvious solutions allowed, too).
---
-- See also: http://99-bottles-of-beer.net/ 
-- """
--
-- This SETL program was created by Hakan Kjellerstrand (hakank@bonetmail.com)
-- Also see my SETL page: http://www.hakank.org/setl/
--

-- standard version
print("p1:");
p1();

-- Alternative version
-- (the "+/" does a string concatenates over the strings in the array.)
print("\np2:");
n := 99;
print(+/[p2(beer) : beer in [n,n-1..1]]);

print("\np3:");
print(p3(99));

--
-- standard loop version
--
proc p1();
  beer := 99;
  while (beer -:= 1) > 0 loop
    print(beer, " bottles of beer on the wall,");
    print(beer, " bottles of beer.\n");
    print("Take one down, pass it around.");
    print(beer-1, " bottles of beer on the wall.\n");
    end while;
  print("0 more bottles of beer on the wall.");

end proc;

-- 
-- Alternative
-- 
proc p2(b);
  bb := " bottle";
  bt := if b > 1 then bb + "s" else bb end if;
  ob := " of beer";
  nl := "\n";
  bw := ob + " on the wall." + nl;
  ob := ob + nl;
  t := "Take one down, pass it around." + nl;

  return b + bt + bw + b + bt + ob + t + 
  (b > 0 and (b-1) + bt + bw + nl);

end proc;

--
-- Recursive version, using p2 for the text.
--
proc p3(b);
  if b = 0 then return ""; end if;
  return p2(b) + p3(b-1);
end proc;


