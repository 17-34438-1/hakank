// 
// Shell sort in SetlX
//
// See
//  * http://en.wikipedia.org/wiki/Shell_sort
//  * http://rosettacode.org/wiki/Sorting_algorithms/Shell_sort
// 
// This SetlX program was created by Hakan Kjellerstrand (hakank@bonetmail.com)
// Also see my SETL page: http://www.hakank.org/setl/
//

// From Wikipedia's pseudo code 
//
// Shell sort (inline)
//
shell_sort := procedure(rw a) {
  inc := round(#a/2);
  while (inc > 0) {
    for (i in [inc+1..#a]) {
      temp := a[i];
      j := i;
      while (j > inc && a[j-inc] > temp) {
        a[j] := a[j-inc];
        j := j - inc;
      }
      a[j] := temp;
    }
    inc := round(inc/2.2);
  }

};

a := [23, 76, 99, 58, 97, 57, 35, 89, 51, 38, 95, 92, 24, 46, 31, 24, 14, 12, 57, 78];
print(a);
shell_sort(a);
print(a);

time0 := now();
r := [1..1000];
a:=[rnd(r) : i in [1..10000]];
shell_sort(a);
print("It took ", (now()-time0)/1000.0," seconds to sort ", #a, " random numbers");

// assert that the array really is sorted
for (i in [2..#a]) {
  if (a[i-1] > a[i]) {
    print("Not correct: $a[i-1]$ should be < then $a[i]$");
  }
}


