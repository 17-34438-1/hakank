#!/usr/bin/env setl
-- 
-- Project Euler problem 14 in SETL
--
-- Problem 14
--
-- """
-- The following iterative sequence is defined for the set of positive integers:
--
-- n n/2 (n is even)
-- n 3n + 1 (n is odd)
--
-- Using the rule above and starting with 13, we generate the following 
-- sequence:
-- 13 40 20 10 5 16 8 4 2 1
--
-- It can be seen that this sequence (starting at 13 and finishing at 1) 
-- contains 
-- 10 terms. Although it has not been proved yet (Collatz Problem), it is 
-- thought that all starting numbers finish at 1.
--
-- Which starting number, under one million, produces the longest chain?
--
-- NOTE: Once the chain starts the terms are allowed to go above one million.")
-- """
--
-- This SETL program was created by Hakan Kjellerstrand (hakank@bonetmail.com)
-- Also see my SETL page: http://www.hakank.org/setl/
--

-- this takes about 20 seconds
problem14();

proc problem14;
  nprint("Problem 14: ");
  lens := {};
  max_len := 0;
  max_n := 1;

  for n in [1..1000000-1] loop
    m := n;
    c_len := 1;
    while m > 1 loop
      if lens(m) /= om then 
        -- use the cached result
        c_len +:= lens(m) - 1;
        m := 1;
      else 
        -- else calculate the value
        m := collatz1(m);
        c_len +:= 1;
      end if;
    end loop;
    lens(n) := c_len;

    -- print when we got a new max value
    if c_len > max_len then
      max_len := c_len;
      max_n := n;
      -- print("n:",n, " len:", c_len);
    end if;
  end loop;

  print("max_n:", max_n, " max_len:", max_len);

end proc;

proc collatz1(n);
  if n mod 2 = 0 then
      return fix(n/2);
  else
      return 3*n + 1;
  end if;
end proc;

