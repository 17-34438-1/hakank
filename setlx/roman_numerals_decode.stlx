// 
// Roman numerals/Decode in SetlX
// 
// From Rosetta code:
// http://rosettacode.org/wiki/Roman_numerals/Decode
// """
// Create a function that takes a Roman numeral as its argument and returns 
// its value as a numeric decimal integer. You don't need to validate the form 
// of the Roman numeral.
//
// Modern Roman numerals are written by expressing each decimal digit of the 
// number to be encoded separately, starting with the leftmost digit and 
// skipping any 0s. So 1990 is rendered "MCMXC" (1000 = M, 900 = CM, 90 = XC) 
// and 2008 is rendered "MMVIII" (2000 = MM, 8 = VIII). The Roman numeral 
// for 1666, "MDCLXVI", uses each letter in descending order. 
// """
// 
// This SetlX program was created by Hakan Kjellerstrand (hakank@bonetmail.com)
// Also see my SETL page: http://www.hakank.org/setl/
//

roman_decode := procedure(str) {
  if (str == "") {
    return om;
  }

  roman := split("MDCLXVI","");
  dec   := split("1000 500 100 50 10 5 1", " ");
  d     := {[roman[i], int(dec[i])] : i in [1..#roman]};
  // d := {["M",1000], ["D",500], ["C",100], ["L",50], ["X",10], ["V",5], ["I",1]};
  
  res := 0; old := 0;
  for (s in split(str,"")) {
    n := d[s];
    // Fix for the Roman convention that XC = 90, not 110.
    if (old > 0 && n > old ) {
      res -= 2*old;
    }
    res += n;
    old := n; 
  }

  return(res);
};

list := [
         "IV",
         "XLII",
         "M",
         "MCXI",
         "CMXI",
         "MCM",
         "MCMXC",
         "MMVIII",
         "MMIX",
         "MCDXLIV",
         "MDCLXVI",
         "MMXII"
         ];
for (r in list) {
  print("$r$\t: $roman_decode(r)$");
}
