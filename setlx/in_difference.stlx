// 
// in difference in SETL
//
// Inspired by the {log} (setlog) program
// http://prmat.math.unipr.it/~gianfr/SETLOG/SamplePrograms/InDifference.slog
// """
// Check whether an element X belongs to the difference 
// between two sets, Set1 and Set2 (i.e., X in Set1\Set2)
// """ 

// This SETL program was created by Hakan Kjellerstrand (hakank@bonetmail.com)
// Also see my SETL page: http://www.hakank.org/setl/
//

// Supported set operations in SetlX
//    union: s1 + s2
//    intersection: s1 * s2
//    difference: s1 - s2, s2 - s1
//
// However, symmetric difference set of s1 and s2, i.e.
// members in exact one of the set, is not supported in SetlX.
// (In SETL this is represented as: s1 mod s2)
//
symdiff := procedure(s1, s2) {
  return (s1 + s2) - (s1 * s2);
};

in_difference := procedure(x, s1, s2) {
    return x in s1 - s2;
};

s1 := {1,2};
s2 := {1,3};
x := 2;

print("$s1$ - $s2$: $s1 - s2$");
print("x in s1-s2: ", in_difference(x,s1,s2));

print("x in symmdiff(s1,s2): $symdiff(s1,s2)$: ", x in symdiff(s1,s2));

// symmetric difference is supported in version 1.2.0
print("\ns1 % s2: ", s1 % s2);
print("x in s1 % s2: ", x in s1 % s2);

