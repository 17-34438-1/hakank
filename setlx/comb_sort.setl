#!/usr/bin/env setl
-- 
-- Comb sort in SETL
--
-- See
--   * http://en.wikipedia.org/wiki/Comb_sort
--   * http://rosettacode.org/wiki/Comb_sort

-- This SETL program was created by Hakan Kjellerstrand (hakank@bonetmail.com)
-- Also see my SETL page: http://www.hakank.org/setl/
--

lst := [23, 76, 99, 58, 97, 57, 35, 89, 51, 38, 95, 92, 24, 46, 31, 24, 14, 12, 57, 78];
print(lst);
combsort(lst);
print(lst);

setrandom(0);
time0 := time();
lst:=[random 10000 : i in [1..10000]];
combsort(lst);
print("It took", (time()-time0)/1000,"seconds to sort", #lst, "numbers");


--
-- quite similar to the pseudo code given
-- at Wikipedia/Rosetta code
--
procedure combsort(rw input);
  gap := #input; --initialize gap size
  until gap <= 1 and swaps = 0 loop
    gap := fix(gap / 1.25);
    i := 1;
    swaps := 0;
    until i + gap > #input loop
      if input(i) > input(i+gap) then
        [input(i), input(i+gap)] := [input(i+gap), input(i)];
        swaps := 1;
      end if;
      i := i + 1;
    end loop;
  end loop;
end procedure;

