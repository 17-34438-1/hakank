#!/usr/bin/env setl
-- 
-- Order two numerical lists in SETL.
--
-- http://rosettacode.org/wiki/Order_two_numerical_lists
-- """
-- Write function that orders two lists or arrays filled with numbers. The function 
-- should accept two lists as arguments and return true if the first list should be 
-- ordered before the second, and false otherwise.
--
-- The order is determined by lexicographic order: Comparing the first element of 
-- each list. If the first elements are equal, then the second elements should be 
-- compared, and so on, until one of the list has no more elements. If the first list 
-- runs out of elements the result is true. if the second list or both run out of 
-- elements the result is false. 
-- """
--
-- This SETL program was created by Hakan Kjellerstrand (hakank@bonetmail.com)
-- Also see my SETL page: http://www.hakank.org/setl/
--

-- (GNU) SETL has built in support for array comparison.

print("([1,2,3,4,5] < [2,3,4]):", [1,2,3,4,5] < [2,3,4]);

-- Example from Ada's solution
L := [[1, 2, 3, 4, 5],
      [1, 2, 1, 5, 2, 2],
      [1, 2, 1, 5, 2],
      [1, 2, 1, 5, 2],
      ["Cat", "Elephant", "Rat", "Cat"],
      ["Cat", "Elephant", "Rat"],
      ["Cat", "Cat", "Elephant"]
      ];
 
for i in [1..#L-1] loop
    if type(L(i)(1)) = type(L(i+1)(1)) then
       print(L(i), ">", L(i+1),   L(i) > L(i+1));
    end if;
end loop;

setrandom(0);
print("random arrays:", (a:=[random 10000 : i in [1..1000]]) <= (b:=[random 10000 : i in [1..1000]]));
print("a(1..10)", a(1..10));
print("b(1..10)", b(1..10));