// 
// Median in SETL
//
// From the {log} (setlog) program
// http://prmat.math.unipr.it/~gianfr/SETLOG/SamplePrograms/Median.slog
// """
// Find the median M of a set S of integer numbers
// (the median is the unique element M of S such that there are as 
// many elements of S which are smaller than M as there are elements
// of S which are larger tham M //- if S has an even number of 
// elements, median/2 is assumed to be false
// """
//
// This SETL program was created by Hakan Kjellerstrand (hakank@bonetmail.com)
// Also see my SETL page: http://www.hakank.org/setl/
//

median1 := procedure(ss) {
  if (#ss % 2 == 0) {
    return;
  }

  for(m in ss) {
     if (#{z : z in ss | z < m} == #{z : z in ss | z > m}) {
       return m;
     }
  }
};


//
// This version, using exists, is more elegant.
//
median2 := procedure(ss) {
  if (#ss % 2 == 0) {
    return;
  }
  if (exists (m in ss | #{z in ss | z < m} == #{z in ss | z > m})) {
    return m;
  }
};

s := {18,5,-3,7,1,7,11,2};
print(median1(s));
print(median2(s));

t := now();
d := [1..10000];
s2:=[rnd(d) : i in [1..101]];
t1 := now();
print(median1(s2));
t2 := now();
print(median2(s2));
t3 := now();

print("Time1: $t2 - t1$ms");
print("Time2: $t3 - t2$ ms");

