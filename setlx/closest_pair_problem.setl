#!/usr/bin/env setl
-- 
-- Closest-pair problem in SETL.
--
-- See 
--  * http://en.wikipedia.org/wiki/Closest_pair_problem
--  * http://rosettacode.org/wiki/Closest_pair_problem
--
-- This SETL program was created by Hakan Kjellerstrand (hakank@bonetmail.com)
-- Also see my SETL page: http://www.hakank.org/setl/
--



p :=
[
[0.654682, 0.925557],
[0.409382, 0.619391],
[0.891663, 0.888594],
[0.716629,   0.9962],
[0.477721, 0.946355],
[0.925092,  0.81822],
[0.624291, 0.142924],
[0.211332, 0.221507],
[0.293786, 0.691701],
[0.839186,  0.72826]];

c := brute_force_closest_pair(p);
print(c);

--
-- the brute force variant
--
procedure brute_force_closest_pair(P);
  N := #P;
  if N < 2 then
    return inf;
  else 
    minDistance := dist(P(1),P(2));
    minPoints := [P(1), P(2)];
    for i in [1..N-1] loop
      for j in [i+1..N] loop
        d2 := dist(P(i),P(j));
        if d2 < minDistance then
          minDistance := d2;
          minPoints := [P(i), P(j)];
        end if;
      end loop;
    end loop;
    return [minDistance, minPoints];
  end if;
end procedure;


procedure dist(p1,p2);
   return sqrt(  (p1(1)-p2(1))**2 + (p1(2)-p2(2))**2);
end procedure;

