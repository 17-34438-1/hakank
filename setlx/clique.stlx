// 
// clique in SetlX
//
// Inspired by the {log} (setlog) program
// http://www.math.unipr.it/~gianfr/SETLOG/SamplePrograms/Clique.slog
// """
// Find all possible cliques in a graph. 
// A clique is a sub-graph that is 
// complete, i.e., any two vertices are connected.
// 
// An undirected graph is represented by the set V of its 
// vertices and the set E of its edges. Each edge is 
// represented by the set of the two connected vertices. 
// """
//
// This SetlX program was created by Hakan Kjellerstrand (hakank@bonetmail.com)
// Also see my SETL page: http://www.hakank.org/setl/
//


//
// cliques of undirected graph G
//
clique := procedure(g) {
  v := { vv : p in g, vv in p}; // the vertices
  cliques := {};
  for (c in pow(v)) {
    // note the {{i}} construct (i.e. not just {i})
    if (forall( i in c | forall(j in c | {i,j} in {{i}} + g))) {
      cliques += {c};
    }
  }
  
  return cliques;
};

//
// Read a graph from a file with the following format:
//   v1 v2
//   v1 v3
//   v2 v3
//
read_file := procedure(filename) {
  file := readFile(filename);
  g := {};
  for (line in file) {
    [f,t] := split(line, "\\s+");
    g += {{f,t}};
  }

  return g;

};


// this is the graph from the {log} example:
// (the graph in clique.in)
g := {{"a","b"},{"a","c"},{"b","c"},{"b","d"},{"c","d"}};
print("graph:", g);
c := clique(g);
print("cliques:", c);
print("size:", #c);

// Reading from a file
filename := "clique2.in";

if (#params > 0) {
  filename := params[1];
}

print("\nReading graph from file $filename$");
g2 := read_file(filename);
print("graph:\n", +/[g +"\n" : g in g2]);
c2 := clique(g2);
print("cliques:", c2);
print("size:", #c2);
