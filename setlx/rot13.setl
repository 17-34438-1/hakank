#!/usr/bin/env setl
-- 
-- Rot-13 in SETL
--
-- See 
--   http://en.wikipedia.org/wiki/ROT13
--   http://rosettacode.org/wiki/Rot-13
--
--
-- This SETL program was created by Hakan Kjellerstrand (hakank@bonetmail.com)
-- Also see my SETL page: http://www.hakank.org/setl/
--

s := command_line(1) ? "Big fjords vex quick waltz nymph!";
s2 := rot13(s);  -- rot13'ed string
s3 := rot13(s2); -- back again
print(s);
print(s2);
print(s3);
print(s = s3);

print("Compare with Unix `rot13`:");
t := filter("rot13", s);
print(t,t=s2);


-- Rot 13 using a map
procedure rot13(s);
  lower := "abcdefghijklmnopqrstuvwxyz";
  upper := "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
  m := create_map2(lower, upper);
  s2 := ""+/[m(c) ? c : c in s];
  return s2;
end procedure;


-- create the map
procedure create_map(lower, upper);
  m := {};
  llen := #lower;
  ldiv := #lower div 2;
  for i in [1..#lower] loop
    ii := (ldiv+i) mod llen;
    if ii = 0 then ii := llen; end if;
    m(upper(i)) := upper(ii);
    m(lower(i)) := lower(ii);
  end loop;
  return m;
end procedure;

-- create the map: alternative version 
procedure create_map2(l, u);
  d := #l div 2; ll := #l;
  return {[l(i),(l(d+1..ll)+l(1..d))(i)]:i in[1..ll]} + 
         {[u(i),(u(d+1..ll)+u(1..d))(i)]:i in[1..ll]};
end procedure;

