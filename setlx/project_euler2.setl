#!/usr/bin/env setl
-- 
-- Project Euler problem 2 in SETL
--
-- Problem 2
-- """
-- Each new term in the Fibonacci sequence is generated by adding the 
-- previous two terms. By starting with 1 and 2, the first 10 terms will be:
--
-- 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
--
-- Find the sum of all the even-valued terms in the sequence which do not 
-- exceed four million.
-- """
--
-- This SETL program was created by Hakan Kjellerstrand (hakank@bonetmail.com)
-- Also see my SETL page: http://www.hakank.org/setl/
--

--
-- Here's a one-liner for calculating Fibonacci number:
--    f:= [1,1]; r := [f(i) := f(i-1)+f(i-2) : i in [3..10]];  print(f);
-- 

problem2();

proc problem2;
    nprint("Problem 2: ");
    f:= [1,1]; 
    r := [f(i) := f(i-1)+f(i-2) : i in [3..100]];  
    print(+/[i: i in f | i mod 2 = 0 and i < 4000000]);
end proc;
