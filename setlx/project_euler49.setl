#!/usr/bin/env setl
-- 
-- Project Euler problem 49 in SETL
--
-- """  
-- The arithmetic sequence, 1487, 4817, 8147, in which each of the terms 
-- increases by 3330, is unusual in two ways: (i) each of the three terms are 
-- prime, and, (ii) each of the 4-digit numbers are permutations of one another.
--
-- There are no arithmetic sequences made up of three 1-, 2-, or 3-digit primes, 
-- exhibiting this property, but there is one other 4-digit increasing sequence.
--
-- What 12-digit number do you form by concatenating the three terms 
-- in this sequence?
--
-- """
--
-- This SETL program was created by Hakan Kjellerstrand (hakank@bonetmail.com)
-- Also see my SETL page: http://www.hakank.org/setl/
--

problem49();


proc is_prime(n);
    if n = 2 or n = 3 then
        return(true);
    end if;
    if n mod 2 = 0 then
        return(false);
    end if;
    for i in [3,5..round(sqrt(n))+1] loop
        if n mod i = 0 then
            return(false);
        end if;
    end loop;
    return(true);
end proc;


-- all permutations of S
procedure perms2(S);
  if S = [] then
    return [[]];
  else 
    return [ [a]+b : a in S, b in perms2([ p in S | p /= a]) ];
  end if;
end perms2;


-- this contains only numbers > 1000 and primes
proc all_permutations(p);
   L := [];
   -- get the index of p in all permutations of 1..#p
   for pp in perms2([1..#p]) loop
      p3 := val(+/[str(p(i)) : i in pp]);
      if p(1) > 0 and is_prime(p3) then
         L +:= [p3];
      end if;
    end loop;

   return(L);

end proc;


proc get_element(n, L, diff);
    res := 0;
    for p in L loop
        if p > n and p-n = diff then
            res := p;
        end if;
    end for;

    return(res);

end proc;


proc check_perms(n, diff);
    all_perms := all_permutations([val(i) : i in str(n)]);

    if all_perms = [] then
        return([]);
    end if;

    L := [];
    p1 := p2 := 0;
    p1 := get_element(n, all_perms, diff);
    if p1 > 0 then
        p2 := get_element(p1, all_perms, diff);
    end if;
    if p2 > 0 then
        L := [n, p1, p2];
    end if;

    return(L);
end proc;

proc problem49;
    diff := 3330;
    for n in [1001,1003..9999] loop
        if is_prime(n) then
            c := check_perms(n, diff);
            if c /= [] then
                print(c);
                if n /= 1487 then
                    res := c;
                end if;
            end if;
        end if;
    end for;

    result := +/[str(i) : i in res];
    print("terms:", res);
    print("result:", result);

end proc;
