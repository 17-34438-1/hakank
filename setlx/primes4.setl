#!/usr/bin/env setl
-- 
-- Primes in SETL
--
-- This solution (there are many) is inspired by the {log} (setlog) program
-- http://prmat.math.unipr.it/~gianfr/SETLOG/SamplePrograms/Primes.slog
-- """
-- Generating the set of all the prime numbers smaller
-- than a given integer N
-- """
--
-- This SETL program was created by Hakan Kjellerstrand (hakank@bonetmail.com)
-- Also see my SETL page: http://www.hakank.org/setl/
--


n := 15;
s := { x : x in [2..n-1] | is_prime(x) };
print(s);

-- Here is one alternative version, as a set comprehension:
s2 := { x : x in [2..n-1] | forall z in [2..x-1] | x mod z /= 0 };
print(s2);


-- {log} code
-- primes(N,S) :- 
--      M is N - 1 &
--      S = {X : X in int(2,M) & labeling(X) & is_prime(X)}!.
-- is_prime(X) :-
--      Y is X -1 & 
--      forall(Z in int(2,Y), non_div(Z,X)).
--
-- non_div(A,B) :- 
--      Rmdr is (B mod A) & Rmdr neq 0.
proc is_prime(x);
  y := x - 1;
  return forall z in [2..y] | non_div(z,x);
end proc;

proc non_div(a,b);
  return b mod a /= 0;
end proc;
