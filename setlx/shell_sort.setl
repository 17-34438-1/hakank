#!/usr/bin/env setl
-- 
-- Shell sort in SETL.
--
-- See
--  * http://en.wikipedia.org/wiki/Shell_sort
--  * http://rosettacode.org/wiki/Sorting_algorithms/Shell_sort
-- 
-- This SETL program was created by Hakan Kjellerstrand (hakank@bonetmail.com)
-- Also see my SETL page: http://www.hakank.org/setl/
--

a := [23, 76, 99, 58, 97, 57, 35, 89, 51, 38, 95, 92, 24, 46, 31, 24, 14, 12, 57, 78];
print(a);
shell_sort(a);
print(a);

setrandom(0);
time0 := time();
a:=[random 1000 : i in [1..10000]];
shell_sort(a);
print("It took", (time()-time0)/1000,"seconds to sort", #a, "numbers");

-- assert that the array really is sorted
for i in [2..#a] loop
  assert(a(i-1) <= a(i));
end loop;


-- From Wikipedia's pseudo code 
--
-- Shell sort (inline)
--
procedure shell_sort(rw a);
  inc := round(#a/2);
  while inc > 0 loop
    for i in [inc+1..#a] loop
        temp := a(i);
        j := i;
        while j > inc and a(j-inc) > temp loop
            a(j) := a(j-inc);
            j := j - inc;
        end loop;
        a(j) := temp;
    end loop;
    inc := round(inc/2.2);
  end loop;

end procedure;
