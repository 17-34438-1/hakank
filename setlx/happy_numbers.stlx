// 
// Happy numbers in SetlX.
//
// From Rosetta code:
// http://rosettacode.org/wiki/Happy_numbers#SETL
// From Wikipedia, the free encyclopedia:
//
//    A happy number is defined by the following process. Starting 
//    with any positive integer, replace the number by the sum of 
//    the squares of its digits, and repeat the process until the 
//    number equals 1 (where it will stay), or it loops endlessly 
//    in a cycle which does not include 1. Those numbers for which 
//    this process ends in 1 are happy numbers, while those that do 
//    not end in 1 are unhappy numbers. Display an example of 
//    your output here. 
//
// Task: Find and print the first 8 happy numbers. 
// """
//
// Note: This is a port from the SETL solution of
// http://rosettacode.org/wiki/Happy_numbers#SETL
//
// This SetlX program was created by Hakan Kjellerstrand (hakank@bonetmail.com)
// Also see my SETL page: http://www.hakank.org/setl/
//

is_happy := procedure(n) {
  s := [n];
  while (n > 1) {
    n := +/[int(i)**2: i in str(n)];
    if (n in s) {
      return false;
    }
    s += [n];
  }

  return true;
};

rr := [n : n in [1..100] | is_happy(n)];
print(rr[1..8]);
