//
// Number games in SETL
//
// From Rosetta code:
// http://rosettacode.org/wiki/Number_names
// """
// Show how to spell out a number in English. You can use a preexisting 
// implementation or roll your own, but you should support inputs up to at 
// least one million (or the maximum value of your language's default bounded 
// integer type, if that's less). Support for inputs other than positive 
// integers (like zero, negative integers, and floating-point numbers) is optional. 
// """
// 
// This SETL program was created by Hakan Kjellerstrand (hakank@bonetmail.com).
// See also my SETL page: http://www.hakank.org/setl/
//


english := procedure(n) {

  if (n == 0) {
    return "zero";
  }

  // prefix    :=  ["dec", "non", "oct", "sept", "sext", "quint", "quadr", "tr", "b", "m"];
  divs      :=  [1000000000000000000, 1000000000000000, 1000000000000, 1000000000, 1000000,  1000,       100];
  divnames  :=  ["quintillion", "quadrillion", "trillion", "billion", "million", "thousand", "hundred"];
  prefixes  :=  ["0", "twen", "thir", "for", "fif", "six", "seven", "eigh", "nine"];
  ordinals  :=  ["first", "second", "third", "fourth", "fifth", "sixth", "seventh",
                 "eighth", "ninth", "tenth", "eleventh", "twelfth", "thirteenth", "fourteenth",
                 "fifteenth", "sixteenth", "seventeenth", "eighteenth", "nineteenth"];
  cardinals :=  ["one", "two", "three", "four", "five", "six", "seven",
                 "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen",
                 "fifteen", "sixteen", "seventeen", "eighteen", "nineteen"];
  
  s := "";
  printed := false;
  if (n < 0) {
    s := "negative " + s;
    n := -n;
  }

  for (i in [1..#divs]) {
    d := n \ divs[i];
    n := n % divs[i];
    if (d > 0) {
      s += english(d) + " ";
      s += divnames[i];
      if (n > 0) {
        s += " ";
      }
      printed := true;
    }
  }

  if (n > 0 && printed) {
    s += "and ";
  }

  if (n == 0) {
    s += "";
  } else if (n > 19) {
    d := n \ 10;
    n := n % 10;
    s += prefixes[d] + "ty";
    if (n > 0) { 
      s+="-" + english(n);
    }
  } else {
    s += cardinals[n];
  }

  return s;

};


for (n in [0,1,11,19,20,29,99,100,2001,2023]) {
  print(n,": ", english(n)); 
}

a := "1234567890";
for (n in [1..#a]) {
  v := a[1..n];
  print(v, ":", english(int(v)));
  rv := reverse(v);
  if (v != rv) {
    print(rv, ":", english(int(rv)));
  }
}

print("\nSome random numbers:");
for (n in [1..3]) {
  v := int(+/[rnd(a) : i in [1..rnd({1..16})]]);
  print(v, ": ", english(v));
}

print("\nSome random negative numbers:");
for (n in [1..3]) {
  v := -int(+/[rnd(a) : i in [1..rnd({1..19})]]);
  print(v, ": ", english(v));
}

// for i in [0..20] loop
//   v := "1" + ("0" * i) + "1";
//   print(v, ":", english(val(v)));
// end loop;

print(english(-1234567890123456));
