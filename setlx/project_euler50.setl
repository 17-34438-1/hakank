#!/usr/bin/env setl
-- 
-- Project Euler problem 50 in SETL
--
-- """  
-- The prime 41, can be written as the sum of six consecutive primes:
-- 41 = 2 + 3 + 5 + 7 + 11 + 13
--
-- This is the longest sum of consecutive primes that adds to a prime 
-- below one-hundred.
--
-- The longest sum of consecutive primes below one-thousand that adds 
-- to a prime, contains 21 terms, and is equal to 953.
--
-- Which prime, below one-million, can be written as the sum of the 
-- most consecutive primes?
-- """
--
-- This SETL program was created by Hakan Kjellerstrand (hakank@bonetmail.com)
-- Also see my SETL page: http://www.hakank.org/setl/
--

var prime_hash := {};
problem50();

proc problem50;
  n := 10000;
  primes := [p : p in [1..n] | is_prime(p)];
  found := false;
  for lenx in [550,549..21] | found = false loop
    for offset in [1..549] | is_prime(+/primes(offset+1..offset+lenx)) and found = false loop
      pp := +/primes(offset+1..offset+lenx);
      if pp < 1000000 then
        print("pp:",pp, "(length: ", lenx, " len2: ", #primes(offset+1..offset+lenx));
        found := true;
      else
        quit;
      end if;
    end loop;
  end loop;

end proc;

proc is_prime(n);
  if prime_hash(n) /= om then
      return prime_hash(n);
  end if;

  if n = 2 or n = 3 then
      prime_hash(n) := true;
      return(true);
  end if;
  if n mod 2 = 0 then
      prime_hash(n) := false;
      return(false);
  end if;
  for i in [3,5..round(sqrt(n))+1] loop
      if n mod i = 0 then
          prime_hash(n) := false;
          return(false);
      end if;
  end loop;
  prime_hash(n) := true;

  return(true);

end proc;
