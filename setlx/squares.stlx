// 
// Squares in SetlX
//
// This program was inspired by the {log} (setlog) program
// http://prmat.math.unipr.it/~gianfr/SETLOG/SamplePrograms/Squares.slog
// """
// Computes the set S of the squares of all numbers contained 
// in a set I
// """
//
// This SetlX program was created by Hakan Kjellerstrand (hakank@bonetmail.com)
// Also see my SETL page: http://www.hakank.org/setl/
//

// The {log} solution is
// S = {Y : exists(X, X in I & Y is X * X)}!.
// However in SETL, we need a range for Y
squares := procedure(s) {
  return { y : y in [1..(max(s))**2] | exists(x in s | y == x*x)};
};


// this is a more SETL'ish version
squares2 := procedure(s) {
  return {y**2 : y in s};
};


ss := {1..100};
print(squares(ss));
print(squares2(ss));
