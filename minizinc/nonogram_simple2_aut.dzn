%
% Simple variant:
% from http://twan.home.fmf.nl/blog/haskell/Nonograms.details
% (2 solutions)
%% ROW RULES
row_max = 4;
row_states = array2d(1..row_total_states, 1..2, [
% pattern 1,1,
%
1,2,
3,0,
3,4,
4,0,

% pattern 1,1,
%
1,2,
3,0,
3,4,
4,0,

% pattern 1,1,
%
1,2,
3,0,
3,4,
4,0,

% pattern 1,1
%
1,2,
3,0,
3,4,
4,0,

]);

row_max_state = 4;
row_total_states = 16;
row_num_patterns = 4;

row_num_states = [4,4,4,4]; % this is also the final state
row_start_where = [1,5,9,13];


% COL_RULES:

col_max = 4;

col_states = array2d(1..col_total_states, 1..2, [
% pattern 1,1,
1,2,
3,0,
3,4,
4,0,

% pattern 1,1,
1,2,
3,0,
3,4,
4,0,

% pattern 1,1,
1,2,
3,0,
3,4,
4,0,

% pattern 1,1,
1,2,
3,0,
3,4,
4,0,

]);

col_num_patterns = 4;
col_max_state = 4;
col_total_states = 16;

col_num_states = [4,4,4,4]; % this is also the final state
col_start_where = [1,5,9,13];


