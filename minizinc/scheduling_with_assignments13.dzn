%
% Service of a plane.
%
% Problem from
% Joseph Malkevitch: "Is it on Time?" in 
% In Discrete Mathematics, November 1994.
% Pages 1, 9f,
% 
% http://dimacs.rutgers.edu/Publications/Modules/Module04-3/Nov94.pdf
%
% Tasks:
% T1 Unload passengers   (13 minutes)
% T2 Unload cargo        (10)
% T3 Refuel              (14)
% T4 Clean               (9)
% T5 Load new cargo      (15)
% T6 Load new passengers (18)
% T7 Late luggage        (4)
% T8 Load food           (7)
%
% Precedences
%
%   T1,T4
%   T2,T5
%   T4,T6
%   T5,T6
%   T6,T7
%   T6,T8  
%
% Note: 
%   - The article states that 50 is the optimal makespan,
%     but we got 55 here. (Note: If all the durations are
%     decreased by 1 then we also get 50. See below.)
%   - It doesn't say how many workers/team there should be.
%     I assume 2 teams (which gives optimal makespan). 
%

num_jobs = 8;
num_workers = 2;
%            1  2  3  4  5  6  7  8
duration = [13,10,14, 9,15,18, 4, 7];
% With these durations (each is 1 less) there is a 
% makespan of 50.
% duration = [12,9,13, 8,13,17, 3, 6];
resource = [ 1, 1, 1, 1, 1, 1, 1, 1];
max_time = 300; % optimal:
allow_idle=true;
collect_workers = false;
do_precendences = true;
num_precedences = 6;
precedences = array2d(1..num_precedences, 1..2, 
[ 
 1,4,
 2,5,
 4,6,
 6,5,
 6,7,
 6,8
]);
