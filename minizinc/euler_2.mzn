% 
% Project Euler problem 2 in MiniZinc.
% 
% http://projecteuler.net/index.php?section=problems&id=2
% """
% Each new term in the Fibonacci sequence is generated by adding the 
% previous two terms. By starting with 1 and 2, the first 10 terms will be:
%
% 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
%
% Find the sum of all the even-valued terms in the sequence which do not 
% exceed four million.
% """

% 
% This MiniZinc model was created by Hakan Kjellerstrand, hakank@bonetmail.com
% See also my MiniZinc page: http://www.hakank.org/minizinc
%

int: n = 46; % Max num of fibs with Gecode/fz

array[1..n] of var int: f;
array[1..n] of var 0..1: x;

var 0..10000000: res = sum(i in 1..n) (x[i]*f[i]);

solve satisfy;

% create the Fibonacci sequence
constraint
    f[1] = 1 /\
    f[2] = 1 /\
    forall(i in 3..n) (
       f[i] = f[i-1] + f[i-2]  
    )
;

% get the even-valued < 4000000 
constraint
  forall(i in 1..n) (
      f[i] > 0 % keep some solvers happy
      /\ 
      (f[i] mod 2 = 1 /\ f[i] < 4000000) <-> (x[i] = 1)
  )
;

output [
  show(f) ++ "\n" ++
  show(x) ++ "\n" ++
  "res: " ++ show(res)
 
];
