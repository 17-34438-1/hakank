%
% xkcd Knapsack problem in Zinc.
%
%  http://xkcd.com/287/
%
% Some amount (or none) of each dish should be ordered to give a total of exact 15.05
%
% Model created by Hakan Kjellerstrand, hakank@bonetmail.com
% See also my MiniZinc/Zinc page: http://www.hakank.org/minizinc
%

enum products;
array[products] of int: price;
int: total;
array[products] of var int: x; % how many items of each dish

var int: z = sum(i in products) (x[i]);

% solve minimize z;
solve satisfy;

constraint
  z >= 0 
  /\
  total = sum(i in products) (x[i]*price[i])
  /\
  forall(i in products) (
      x[i] >= 0
  )
;

%
% data
%
enum products = {mixed_fruit, french_fries, side_salad, host_wings, mozzarella_sticks, samples_place};
% note: we can't just make this as a "common" array anymore (i.e. [215, 275, 335, 355, 420, 580])
%       since the indices is not 1..num_prices, but products.
price = [mixed_fruit:215, french_fries:275, side_salad:335, 
         host_wings:355, mozzarella_sticks:420, samples_place:580];
total = 1505; % multiply by 100 to be able to use integers


output [
  show(x), "\n"
] ++ [
  
  if fix(x[i]) > 0 then
    % here we show the actual price
    show(x[i]) ++ " of " ++ show(i) ++ " price: " ++ show_float(price[i] / 100, 2) ++ " (= " ++ show_float(x[i]*price[i]/100, 2) ++ ")\n"
  else 
    ""
  endif
  | i in products
];
