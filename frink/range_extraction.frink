// 
// Range extraction in Frink
// 
// From Rosetta code
// http://rosettacode.org/wiki/Range_extraction
// """
// A format for expressing an ordered list of integers is to use a comma 
// separated list of either
//
//   * individual integers
//   * Or a range of integers denoted by the starting integer separated 
//     from the end integer in the range by a dash, '-'. (The range includes 
//     all integers in the interval including both endpoints) 
//
//     * The range syntax is to be used only for, and for every range 
//       that expands to more than two values. 
//
// Example
// The list of integers:
//
//     -6, -3, -2, -1, 0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 14, 15, 17, 18, 19, 20 
//
// Is accurately expressed by the range expression:
//
//     -6,-3-1,3-5,7-11,14,15,17-20 
//
// (And vice-versa).
//
// The task
//
// Create a function that takes a list of integers in increasing order 
// and returns a correctly formatted string in the range format.
// Use the function to compute and print the range formatted version of the 
// following ordered list of integers: 
// 
//     0,  1,  2,  4,  6,  7,  8, 11, 12, 14,
//    15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
//    25, 27, 28, 29, 30, 31, 32, 33, 35, 36,
//    37, 38, 39
// """
// 
// This Frink program was created by Hakan Kjellerstrand (hakank@bonetmail.com)
// Also see my Frink page: http://www.hakank.org/frink/
//

getRange[r] :=
{
   if length[r] == 0
      return r
   else
      return min[r] + "-" + max[r]
}

makeRanges[L] :=
{
   ranges = new array
   range = [L@0]
   
   for i = 1 to length[L]-1
   {
      li1 = L@(i-1)
      li  = L@i
      if li == li1+1
         range.push[li]
      else
      {
         if length[range] > 0
            ranges.push[range]
         range = new array // create new range
         range.push[li]
      }
   }
   if length[range] > 0
      ranges.push[range] // pickup the last range
   return  join[",", map[{|r| getRange[r]},  ranges]]
}


list1 = [-6, -3, -2, -1, 0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 14, 15, 17, 18, 19, 20]
println[makeRanges[list1]]

list2 = [0,  1,  2,  4,  6,  7,  8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39];
println[makeRanges[list2]]

// list3 = 1 to 20           // This gives weird results, even for the following calls
// list3 = new range[1, 20]  // As does this.
list3 = array[1 to 20]
println[makeRanges[list3]]

list4 = [13]
println[makeRanges[list4]]

list5 = [11,12,13,15]
println[makeRanges[list5]]

