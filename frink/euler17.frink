//
// Euler problem 17 in Frink
//
// """
// If the numbers 1 to 5 are written out in words: one, two, three, four, five, 
// then there are 3 + 3 + 5 + 4 + 4 = 19 letters used in total.
// 
// If all the numbers from 1 to 1000 (one thousand) inclusive were written out in 
// words, how many letters would be used?
// 
// NOTE: Do not count spaces or hyphens. For example, 342 (three hundred and forty-two) 
// contains 23 letters and 115 (one hundred and fifteen) contains 20 letters. The use of 
// "and" when writing out numbers is in compliance with British usage.
// """
// 
//  This Frink program was created by Hakan Kjellerstrand (hakank@bonetmail.com).
//  See also my Frink page: http://www.hakank.org/frink/
//

// This solution was inspired by my Pop-11 program 
//    http://www.hakank.org/poplog/euler17.p
// via my SetlX program
//    http://www.hakank.org/setl/euler17.stlx

english[n] :=
{
  divs      =  [1000000000, 1000000,  1000,       100]
  divnames  =  ["billion", "million", "thousand", "hundred"]
  prefixes  =  ["0", "twen", "thir", "for", "fif", "six", "seven", "eigh", "nine"]
  ordinals  =  ["first", "second", "third", "fourth", "fifth", "sixth", "seventh",
                "eighth", "ninth", "tenth", "eleventh", "twelfth", "thirteenth", "fourteenth",
                "fifteenth", "sixteenth", "seventeenth", "eighteenth", "nineteenth"]
  cardinals =  ["one", "two", "three", "four", "five", "six", "seven",
                "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen",
                "fifteen", "sixteen", "seventeen", "eighteen", "nineteen"]

  sstr = ""
  printed = false
  if n < 0
  {
    sstr = "minus" + sstr
    n = -n
  }

  for i = new range[0, length[divs]-1]
  {
    d = n div divs@(i)
    n = n % divs@(i)
    if d != 0 
    {
      sstr = sstr + english[d]
      sstr = sstr + divnames@(i)
      printed = true
    }
  }

  if (n > 0 && printed) 
    sstr = sstr + "and"

  if (n > 19) 
  {
    d = n div 10
    n = n % 10
    sstr = sstr + prefixes@(d-1)
    sstr = sstr + "ty"
    sstr = sstr + english[n]
  } else 
  {
    if n > 0 
      sstr = sstr + cardinals@(n-1)
  }

  return sstr

}

total = 0
for i = new range[1,1000] 
{
  sstr = english[i]
  slen = length[sstr]
  total = total + slen
}

println[total]
