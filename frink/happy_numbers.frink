// 
// Happy numbers in Frink
//
// From Rosetta code:
// http://rosettacode.org/wiki/Happy_numbers
// From Wikipedia, the free encyclopedia:
//
//    A happy number is defined by the following process. Starting 
//    with any positive integer, replace the number by the sum of 
//    the squares of its digits, and repeat the process until the 
//    number equals 1 (where it will stay), or it loops endlessly 
//    in a cycle which does not include 1. Those numbers for which 
//    this process ends in 1 are happy numbers, while those that do 
//    not end in 1 are unhappy numbers. Display an example of 
//    your output here. 
//
// Task: Find and print the first 8 happy numbers. 
// """
//
// This Frink program was created by Hakan Kjellerstrand (hakank@bonetmail.com)
// Also see my Frink page: http://www.hakank.org/frink/
//


isHappy[n] :=
{
   s = new set[n]
   while n > 1
   {
      n = sum[map[{|i| parseInt[i]^2}, charList[""+n]]]
      if s.contains[n]
         return false
      
      s.put[n]
   }
 
   return true
}

// The 8 first happy numbers
println[sliceLength[select[1 to 100, {|i| isHappy[i]}], 0, 8]]

// alternative way
h = new array[]
i = 1
while length[h] < 8
{
   if isHappy[i]
      h.push[i]
   i = i+1
}
println[h]
