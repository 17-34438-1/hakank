// 
// Closest-pair problem in Frink
//
// See 
//  * http://en.wikipedia.org/wiki/Closest_pair_problem
//  * http://rosettacode.org/wiki/Closest_pair_problem
//
// This Frink program was created by Hakan Kjellerstrand (hakank@bonetmail.com)
// Also see my Frink page: http://www.hakank.org/frink/
//


//
// the brute force variant
//
brute_force_closest_pair[p] :=
{
   n = length[p]
   if n < 2
      return infinity
   else
   {
      minDistance = dist[p@0,p@1]
      minPoints = [p@0, p@1]
      multifor [i,j] = [0 to n-2, i+1 to n-1]
      {
         d2 = dist[p@i,p@j]
         if d2 < minDistance
         {   
            minDistance = d2
            minPoints = [p@i,p@j]
         }
      }
      return [minDistance, minPoints]
   }
}


dist[p1,p2] := sqrt[(p1@0-p2@0)^2 + (p1@1-p2@1)^2]


p = [[0.654682, 0.925557],
[0.409382, 0.619391],
[0.891663, 0.888594],
[0.716629,   0.9962],
[0.477721, 0.946355],
[0.925092,  0.81822],
[0.624291, 0.142924],
[0.211332, 0.221507],
[0.293786, 0.691701],
[0.839186,  0.72826]]

c = brute_force_closest_pair[p]
println[c]
