// 
// Forward difference in Frink
//
// From http://rosettacode.org/wiki/Forward_difference
// """
// Provide code that produces a list of numbers which is the n-th order 
// forward difference, given a non-negative integer (specifying the order) 
// and a list of numbers. The first-order forward difference of a list of 
// numbers (A) is a new list (B) where Bn = An+1 - An. List B should have 
// one less element as a result. The second-order forward difference of 
// A will be the same as the first-order forward difference of B. That 
// new list will have two fewer elements than A and one less than B. 
// The goal of this task is to repeat this process up to the desired order. 
// """
//
// Also, see http://mathworld.wolfram.com/ForwardDifference.html
//
//
// This Frink program was created by Hakan Kjellerstrand (hakank@bonetmail.com)
// Also see my Frink page: http://www.hakank.org/frink/
//


//
// all forward differences
//
all_diffs[x] :=
{
  d = new array
  while x != []
  {
    d.push[x]
    x = diff[x]
  }
  return d
}

//
// The i'th forward difference list of x
//
diff_i[x,i] :=
{
  j = 1
  while j <= i && x != []
  {
    j = j + 1
    x = diff[x]
  }
  return x

};

//
// different list of x
//
diff[x] :=
{
   d = new array
   for i = 1 to length[x]-1
      d.push[x@i-x@(i-1)]
   return d
}


x = [90, 47, 58, 29, 22, 32, 55, 5, 55, 73]

println[all_diffs[x]]

// println the i'th forward difference
for i = 1 to length[x]-1
{
  d = diff_i[x, i]
  println["i:$i d: $d " + "#d: " + length[d]]
}
