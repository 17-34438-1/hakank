// 
// Even or odd in Frink
//
// http://rosettacode.org/wiki/Even_or_odd
// """
// Test whether an integer is even or odd.
//
// There is more than one way to solve this task:
//
//  * Use the even and odd predicates, if the language provides them.
//  * Check the least significant digit. With binary integers, i bitwise-and 
//    1 equals 0 iff i is even, or equals 1 iff i is odd.
//  *  Divide i by 2. The remainder equals 0 iff i is even. The remainder equals 
//    +1 or -1 iff i is odd.
//  * Use modular congruences:
//        i ≡ 0 (mod 2) iff i is even.
//        i ≡ 1 (mod 2) iff i is odd. 
// """
//
// This Frink program was created by Hakan Kjellerstrand (hakank@bonetmail.com)
// Also see my Frink page: http://www.hakank.org/frink/
//

// modulo
even[n]  := n % 2 == 0
odd[n]   := n % 2 == 1
even2[n] := !odd[n]
odd2[n]  := !even[n]
even3[n] := n - 2 * floor[n/2] == 0
odd3[n]  := n - 2 * floor[n/2] == 1

println["even 11: " + even[11]]
println["odd  11: " + odd[11]]
println["even2 12: " + even2[12]]
println["odd2  12: " + odd2[12]]
println["even3 12: " + even3[12]]
println["odd3  12: " + odd3[12]]

println["even3 2^211-1: " + even3[2^211-1]]
println["odd3  2^211-1: " + odd3[2^211-1]]
