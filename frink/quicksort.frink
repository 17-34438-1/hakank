/*

  Quicksort in Frink

  From Rosetta code
  http://rosettacode.org/wiki/Sorting_algorithms/Quicksort

  This Frink program was created by Hakan Kjellerstrand (hakank@bonetmail.com)
  Also see my Frink page: http://www.hakank.org/frink/

*/

//
// Using a single array and flatten
//
quicksort[s] :=
{
   if length[s] == 0 || s == [] || s == undef
      return s
   pivot = s.removeRandom[]
   return flatten[[quicksort[select[s, {|i,p| i < p}, pivot]],
                   pivot,
                   quicksort[select[s, {|i,p| i >= p}, pivot]]]]
   
}

//
// Using the new pushAll (requires >= Frink version 2012-09-29)
//
quicksort1b[s] :=
{
   if length[s] == 0 || s == [] || s == undef
      return s
   pivot = s.removeRandom[]
   return quicksort[select[s, {|i,p| i < p}, pivot].pushAll[[pivot]].pushAll[quicksort[select[s, {|i,p| i >= p}, pivot]]]]
   
}

s = [1,2,3,4,5,6,6,5,4,4,3,2,1]
println["quicksort " + quicksort[s]]
println["quicksort " + quicksort[[1,3,5,7,9,8,6,4,2]]]

s = [1,2,3,4,5,6,6,5,4,4,3,2,1]
println["quicksort1b " + quicksort1b[s]]
println["quicksort1b " + quicksort1b[[1,3,5,7,9,8,6,4,2]]]


s2 = map[{|| random[10000]}, 1 to 100000]
t1 = now[]
println["Start"]
s2 = quicksort[s2]
println["It took " + (now[]-t1 -> "seconds") + " to sort " + length[s2] + " elements"]
