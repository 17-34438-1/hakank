// 
// Flatten a list in Frink
//
// From http://rosettacode.org/wiki/Flatten_a_list
// """
// Write a function to flatten the nesting in an arbitrary list of 
// values. Your program should work on the equivalent of this list:
//
//  [[1], 2, [[3,4], 5], [[[]]], [[[6]]], 7, 8, []]
//
// Where the correct result would be the list:
//
//   [1, 2, 3, 4, 5, 6, 7, 8]
// """
//
// This Frink program was created by Hakan Kjellerstrand (hakank@bonetmail.com)
// Also see my Frink page: http://www.hakank.org/frink/
//


// (I have not found an isList function)
isList[L] := length[L] > 0 || L == []


flatten1[ll] :=
{
  res = new array
  flatten1_tmp[ll, res]
  return res
}

flatten1_tmp[L, res] :=
{
   for l = L
      if isList[l]
         flatten1_tmp[l,res]
      else
         res.push[l]
}

a = [[1], 2, [[3,4], 5], [[[]]], [[[6]]], 7, 8, []]
println["original list: $a"]

println[flatten[a]] // built-in
println[flatten1[a]]
