// 
// Project Euler problem 43 in Frink
//
// """  
// The number, 1406357289, is a 0 to 9 pandigital number because it is made up of 
// each of the digits 0 to 9 in some order, but it also has a rather interesting 
// sub-string divisibility property.
//
// Let d1 be the 1st digit, d2 be the 2nd digit, and so on. In this way, we 
// note the following:
//
//     * d2d3d4=406 is divisible by 2
//     * d3d4d5=063 is divisible by 3
//     * d4d5d6=635 is divisible by 5
//     * d5d6d7=357 is divisible by 7
//     * d6d7d8=572 is divisible by 11
//     * d7d8d9=728 is divisible by 13
//     * d8d9d10=289 is divisible by 17
//
// Find the sum of all 0 to 9 pandigital numbers with this property.
// """
//
// This Frink program was created by Hakan Kjellerstrand (hakank@bonetmail.com)
// Also see my Frink page: http://www.hakank.org/frink/
//


pp = [2, 3, 5, 7, 11, 13, 17]
s = array[0 to 9]
ssum = 0
for s = s.lexicographicPermute[]
{
  // skipping all permutations that starts with [0,..]
  if s@0 == 0
     continue

  s2 = join["",s]
  i = 0
  while i <= 6 && parseInt[substrLen[s2,i+1,3]] mod pp@i == 0
    i = i + 1

  if i==7
  {
    println["\t" + s2]
    ssum = ssum + parseInt[s2]
  }

}

println[ssum]
