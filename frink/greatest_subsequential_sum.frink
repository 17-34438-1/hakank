// 
// Greatest subsequential sum in Frink
//
// From http://rosettacode.org/wiki/Greatest_subsequential_sum
// """
// Given a sequence of integers, find a continuous subsequence which maximizes 
// the sum of its elements, that is, the elements of no other single 
// subsequence add up to a value larger than this one. An empty subsequence 
// is considered to have the sum 0; thus if all elements are negative, the 
// result must be the empty sequence. 
// """
//
// This Frink program was created by Hakan Kjellerstrand (hakank@bonetmail.com)
// Also see my Frink page: http://www.hakank.org/frink/
//

greatest_subsequential_sum[a] :=
{
  if a == []
     return [0,0,0,[]]

  len = length[a]
  ssum = 0
  beginmax = 0
  endmax = -1
  maxsum = 0
  for begin = 0 to len-1
  {
    ssum = 0;
    for xend = begin to len-1
    {
      ssum = ssum + a@xend
      if ssum > maxsum
      {
        maxsum = ssum
        beginmax = begin
        endmax = xend
      }
    }
  }
  
  if maxsum > 0
    return [maxsum, beginmax, endmax, slice[a, beginmax, endmax+1]]
  else
    return [0,0,0,[]]
}

//
// some test cases
//
aa = [[-1 , -2 , 3 , 5 , 6 , -2 , -1 , 4 , -4 , 2 , -1],
      [-1,-2, 3],
      [-1,-2],
      [0],
      []]

for a = aa
{
   println["Testing: " + a]
   [maxsum,beginmax, endmax, seq] =  greatest_subsequential_sum[a]
   println["maxsum: $maxsum begin: $beginmax end: $endmax seq: $seq"]
}


