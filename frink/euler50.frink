// 
// Project Euler problem 50 in Frink
// 
// Problem 50
// """
// The prime 41, can be written as the sum of six consecutive primes:
// 41 = 2 + 3 + 5 + 7 + 11 + 13
//
// This is the longest sum of consecutive primes that adds to a prime 
// below one-hundred.
//
// The longest sum of consecutive primes below one-thousand that adds to a prime, 
// contains 21 terms, and is equal to 953.
// 
// Which prime, below one-million, can be written as the sum of the most 
// consecutive primes?
// """
// 
// 
// This Frink program was created by Hakan Kjellerstrand (hakank@bonetmail.com)
// Also see my Frink page: http://www.hakank.org/frink/
//

m = 1000000
n = 10000
primes = select[array[2 to n], {|p| isPrime[p]}]
found_number = 0
/*
OUTER:
multifor [len, offset] = [550 to 21 step -1, 1 to 549]
{
  // println["len: $len offset: $offset"]
  if found
     break OUTER
  pp = sliceLength[primes, offset+1, len]
  if pp == [] 
     next
  println["pp: $pp"]
  println["after"]
  p = sum[pp]
  println["p: $p"]
  
  if !isPrime[p]
    next

  if p < m
  {
    println["p:$p (length: " + length[pp] + ")"]
    found = true
  } 
}
*/

found_number = 0
OUTER:
for len = 550 to 21 step -1
{
   for offset = 1 to 549
   {
      if found_number > 0
         break OUTER
      pp = sliceLength[primes, offset+1, len]
      p = sum[pp]
      if !isPrime[p]
         next
      
      if p < m
      {
         found_number = p
      } 
   }
}


println[found_number]