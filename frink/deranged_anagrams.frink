// 
// Deranged anagrams in Frink
//
// http://rosettacode.org/wiki/Anagrams/Deranged_anagrams
// """
// Two or more words are said to be anagrams if they have the same characters, 
// but in a different order. By analogy with derangements we define a deranged 
// anagram as two words with the same characters, but in which the same character 
// does not appear in the same position in both words.
//
// The task is to use the word list at 
// http://www.puzzlers.org/pub/wordlists/unixdict.txt to find and show 
// the longest deranged anagram. 
// """
//
//
// This Frink program was created by Hakan Kjellerstrand (hakank@bonetmail.com)
// Also see my Frink page: http://www.hakank.org/frink/
//

//
// deranged: no common character in strings a and b
//
isDeranged[a,b] :=
{
   as = charList[a]
   bs = charList[b]
   len = length[as]
   ss = select[0 to len-1,{|i,t| t@0@i != t@1@i},[as,bs]]
   return length[ss] == len

}



//
// get all anagrams
//
t1 = now[]

// words = lines["file:/usr/share/dict/words"]

// From http://www.puzzlers.org/pub/wordlists/unixdict.txt
words = lines["file:unixdict.txt"]

// This file is part of the Moby wordlist project, available at:
//   http://icon.shef.ac.uk/Moby/
// (the file mobydict/mwords/354984si.ngl)
// words = lines["file:samples/singlewords.txt"]

anagrams = new dict
for word = words
{
   word = lc[word]
   if (word =~ %r/^\s*$/) or (word =~ %r/[^a-zåäö]/)
      continue

   sorted = join["",sort[charList[word]]]
   if anagrams.containsKey[sorted]
      anagrams@sorted.push[word]
   else
      anagrams@sorted = array[word]
}

// get the deranged anagrams
deranged = []
max_len = 0
for [sorted, words] = anagrams
{
   len = length[words]
   if len == 1
      next

   all_deranged = true
   multifor [i,j] = [0 to len-1, i+1 to len-1]
      if !isDeranged[words@i,words@j]
      {
         all_deranged = false
         break
      }

   if all_deranged
      deranged.push[words] 
}

// print all derangement with max word length
lens = map[{|w,tmp| length[w]}, deranged] // length of the one of the words
max_val = max[lens]
println["max_val: $max_val"]
println[select[deranged, {|w,m| length[w@0] == m}, max_val]]

