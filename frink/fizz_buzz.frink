// 
// FizzBuzz (Rosetta Code) in Frink
//
// http://rosettacode.org/wiki/FizzBuzz
// """
// Write a program that prints the numbers from 1 to 100. 
// But for multiples of three print "Fizz" instead of the number 
// and for the multiples of five print "Buzz". For numbers which 
// are multiples of both three and five print "FizzBuzz".
// """
//
//
// This Frink program was created by Hakan Kjellerstrand (hakank@bonetmail.com)
// Also see my Frink page: http://www.hakank.org/frink/
//

// Plain version
fizzBuzz1[] :=
{
   print["fizzBuzz1: "]
   a1 = new array
   for i = 1 to 100
      if i mod 15 == 0
         a1@i = "FizzBuzz"
      else 
         if i mod  3 == 0
            a1@i = "Fizz"
      else   
         if i mod  5 == 0
            a1@i = "Buzz"
      else
         a1@i = i

   a1.popFirst[]
   println[a1]
}


fizzBuzz2[] :=
{
   print["fizzBuzz2: "]
   d = new dict[[[15,"FizzBuzz"],[3,"Fizz"],[5,"Buzz"]]]
   a2 = new array[]
   for i = array[1 to 100]
   {
      v = false
      for j = [15,5,3]
         if i mod j == 0 and d.containsKey[j]
         {
            a2.push[d@j]
            v = true
            break
         }

      if !v
         a2.push[i]
   }

   println[a2]
}


fizzBuzz3[] :=
{
   print["fizzBuzz3: "]   
   n = 100
   a3 = array[0 to n]
   for i = map[{|i| i*3}, 1 to 100 div 3]
      a3@i = "Fizz"

   for i = map[{|i| i*5}, 1 to 100 div 5]
      a3@i = "Buzz"

   for i = map[{|i| i*15}, 1 to 100 div 15]
      a3@i = "FizzBuzz"
   
   a3.popFirst[]
   println[a3]
   
}


/*
// A generalization of fizzBuzz3 but it don't work
// map's anonymous function don't understand external" variables.
fizzBuzz3b[] :=
{
   print["fizzBuzz3b: "]
   d = new dict[[[15,"FizzBuzz"],[3,"Fizz"],[5,"Buzz"]]]
   n = 100
   a3 = array[0 to n]
   for k = [3,5,15]
      for i = map[{|i| i*k}, 1 to 100 div k]
         a3@i = d@k
   
   a3.popFirst[]
   println[a3]
   
}
*/


fizzBuzz4[] :=
{
   print["fizzBuzz4: "]
   d = new dict[[[15,"FizzBuzz"],[3,"Fizz"],[5,"Buzz"]]]
   n = 100
   a3 = array[1 to n]
   multifor [k,i] = [[3,5,15], select[1 to n,{|i,k| i mod k == 0}, k]]
      a3@(i-1) = d@k
   
   println[a3]
   
}

// A little more cryptic...
fizzBuzz5[] :=
{
   print["fizzBuzz5: "]
   a4=array[0 to(n=100)-1]
   for i=1 to n;a4@(i-1)=(length[v=(i%3==0?"Fizz":"")+(i%5==0?"Buzz":"")]>0)?v:i
   println[a4]
}

fizzBuzz1[]
fizzBuzz2[]
fizzBuzz3[]
// fizzBuzz3b[]
fizzBuzz4[]
fizzBuzz5[]

