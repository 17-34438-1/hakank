
MAIN MODEL Main_Diet

  DECLARATION SECTION 

    SET:
       identifier   :  ii
       index        :  i
       definition   :  ElementRange(1, 4) ;

    PARAMETER:
       identifier   :  Price
       index domain :  i ;

    PARAMETER:
       identifier   :  Calories
       index domain :  (i) ;

    PARAMETER:
       identifier   :  CaloriesLimit ;

    PARAMETER:
       identifier   :  ChocolateLimit ;

    PARAMETER:
       identifier   :  SugarLimit ;

    PARAMETER:
       identifier   :  FatLimit ;

    CONSTRAINT:
       identifier   :  CheckLimits
       definition   :  Sum[i, x(i)*Calories(i)] >= CaloriesLimit  and
                       Sum[i, x(i)*Chocolate(i)] >= ChocolateLimit  and
                       Sum[i, x(i)*Sugar(i)] >= SugarLimit  and
                       Sum[i, x(i)*Fat(i)] >= FatLimit  ;

    PARAMETER:
       identifier   :  Chocolate
       index domain :  (i) ;

    PARAMETER:
       identifier   :  Sugar
       index domain :  (i) ;

    PARAMETER:
       identifier   :  Fat
       index domain :  (i) ;

    VARIABLE:
       identifier   :  x
       index domain :  (i)
       range        :  integer ;

    VARIABLE:
       identifier   :  TotalCost
       range        :  free
       definition   :  sum[i, x(i)*Price(i)] ;

    MATHEMATICAL PROGRAM:
       identifier   :  DietPlan
       objective    :  TotalCost
       direction    :  minimize
       constraints  :  AllConstraints
       variables    :  AllVariables
       type         :  COP ;

  ENDSECTION  ;

  PROCEDURE
    identifier :  MainInitialization

  ENDPROCEDURE  ;

  PROCEDURE
    identifier :  MainExecution
    body       :  
      ShowProgressWindow ;
      solve DietPlan;
      
      if (DietPlan.ProgramStatus <> 'Optimal') then
           empty x, TotalCost;
      endif;

  ENDPROCEDURE  ;

  PROCEDURE
    identifier :  MainTermination
    body       :  
      if ( CaseSaveAll( confirm:2 ) = 1 ) then
          return 1;
      else
          return 0;
      endif ;

  ENDPROCEDURE  ;

ENDMODEL Main_Diet ;
