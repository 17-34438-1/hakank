
MAIN MODEL Main_SetCovering

  DECLARATION SECTION 

    SET:
       identifier   :  cities
       subset of    :  Integers
       indices      :  i, j
       definition   :  {1..numCities} ;

    PARAMETER:
       identifier   :  numCities
       initial data :  6 ;

    PARAMETER:
       identifier   :  minDistance
       initial data :  15 ;

    PARAMETER:
       identifier   :  distance
       index domain :  (i,j)
       definition   :  data
                       { ( 1, 2 ) : 10,  ( 1, 3 ) : 20,  ( 1, 4 ) : 30,  ( 1, 5 ) : 30,  ( 1, 6 ) : 20,  ( 2, 1 ) : 10,  ( 2, 3 ) : 25,
                         ( 2, 4 ) : 35,  ( 2, 5 ) : 20,  ( 2, 6 ) : 10,  ( 3, 1 ) : 20,  ( 3, 2 ) : 25,  ( 3, 4 ) : 15,  ( 3, 5 ) : 30,
                         ( 3, 6 ) : 20,  ( 4, 1 ) : 30,  ( 4, 2 ) : 35,  ( 4, 3 ) : 15,  ( 4, 5 ) : 15,  ( 4, 6 ) : 25,  ( 5, 1 ) : 30,
                         ( 5, 2 ) : 20,  ( 5, 3 ) : 30,  ( 5, 4 ) : 15,  ( 5, 6 ) : 14,  ( 6, 1 ) : 20,  ( 6, 2 ) : 10,  ( 6, 3 ) : 20,
                         ( 6, 4 ) : 25,  ( 6, 5 ) : 14 } ;

    VARIABLE:
       identifier   :  x
       index domain :  i
       range        :  binary ;

    VARIABLE:
       identifier   :  z
       range        :  free
       definition   :  sum(i, x(i))
       comment      :  "Number of fire stations (to minimize)" ;

    CONSTRAINT:
       identifier   :  dist
       index domain :  i
       definition   :  sum(j | distance(i,j) <= minDistance, x(j)) >= 1 ;

    MATHEMATICAL PROGRAM:
       identifier   :  SetCoveringPlan
       objective    :  z
       direction    :  minimize
       constraints  :  AllConstraints
       variables    :  AllVariables
       type         :  COP ;

  ENDSECTION  ;

  PROCEDURE
    identifier :  MainInitialization

  ENDPROCEDURE  ;

  PROCEDURE
    identifier :  MainExecution
    body       :  
      ShowProgressWindow;
      solve SetCoveringPlan;
      
      if (SetCoveringPlan.ProgramStatus <> 'Optimal') then
        empty x
      endif;
      
      DialogMessage(GMP::Solution::Count('SetCoveringPlan'));
      display x;

  ENDPROCEDURE  ;

  PROCEDURE
    identifier :  MainTermination
    body       :  
      return DataManagementExit();

  ENDPROCEDURE  ;

ENDMODEL Main_SetCovering ;
