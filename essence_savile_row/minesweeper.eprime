$
$ Minesweeper problem in Essence'.
$
$ From gecode/examples/minesweeper.cc:
$ """
$ A specification is a square matrix of characters. Alphanumeric characters 
$ represent the number of mines adjacent to that field. Dots represent 
$ fields with an unknown number of mines adjacent to it (or an actual mine).
$ """
$ 
$ E.g.
$      "..2.3."
$      "2....."
$      "..24.3"
$      "1.34.."
$      ".....3"
$      ".3.3.."
$ """
$ 
$ Also see 
$  
$ http://www.janko.at/Raetsel/Minesweeper/index.htm
$  (the first 10 examples are from)

$ http://en.wikipedia.org/wiki/Minesweeper_(computer_game)
$
$ Ian Stewart on Minesweeper: http://www.claymath.org/Popular_Lectures/Minesweeper/

$ Richard Kaye's Minesweeper Pages
$ http://web.mat.bham.ac.uk/R.W.Kaye/minesw/minesw.htm
$ Some Minesweeper Configurations
$ http://web.mat.bham.ac.uk/R.W.Kaye/minesw/minesw.pdf
$
$ Compare with the following models:
$ * Choco: http://www.hakank.org/choco/MineSweeper.java
$ * Comet: http://www.hakank.org/comet/minesweeper.co
$ * ECLiPSE: http://www.hakank.org/eclipse/minesweeper.ecl
$ * Gecode/R: http://www.hakank.org/gecode_r/minesweeper.rb
$ * JaCoP: http://www.hakank.org/JaCoP/MineSweeper.java
$ * MiniZinc: http://www.hakank.org/minizinc/minesweeper.mzn
$
$ Model created by Hakan Kjellerstrand, hakank@bonetmail.com
$ See also my Essence'/Tailor page: http://www.hakank.org/minion_tailor
language ESSENCE' 1.0

letting X be -1 $ the unknowns
letting AB be domain int(-1..1)

given r : int $ rows
given c : int $ column
$ encoding: -1 for unknown, >= 0 for number of mines in the neighbourhood
given game : matrix indexed by [int(1..r),int(1..c)] of int(-1..)

find mines : matrix indexed by [int(1..r),int(1..c)] of int(0..1)

such that

   forall i : int(1..r) . forall j : int(1..c) . 
     (     
       ((game[i,j] > X) -> (mines[i,j] = 0)) /\
       ((mines[i,j] = 1) -> (game[i,j] = X)) /\

       $ Note: This don't work in Savile Row 1.5.
       $ (
       $ (game[i,j] > X ) ->
       $   (
       $   game[i,j] = sum a,b : int(-1,0,1) .
       $       ( (i+a > 0)  /\ (j+b > 0) /\
       $         (i+a <= r) /\ (j+b <= c)) * (mines[i+a,j+b])
       $   )
       $  )

       $ using matrix comprehension instead works.
       (
       (game[i,j] > X ) ->
         game[i,j] = sum([mines[i+a,j+b] | a,b : int(-1,0,1), 
                                   i+a > 0  /\ j+b > 0 /\
                                   i+a <= r /\ j+b <= c
                        ])
        )


    )
