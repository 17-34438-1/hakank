#
# Euler problem 10
#
# """
# The sum of the primes below 10 is 2 + 3 + 5 + 7 = 17.
#
# Find the sum of all the primes below two million.#
# """
#
# This program was written by Hakan Kjellerstrand (hakank@gmail.com)
# Also see my Icon/Unicon page http://www.hakank.org/icon/
#

link numbers

procedure main()

    # problem10() # 10.9s
    # problem10b() # 10.7s
    # problem10c() # 6.034s
    problem10d() # 0.85s

end

# 10.905s
procedure problem10()
    local p, s := 0
    local n := 2000000
    write("problem10")
    every p := p10(n) & p < n & s +:= p
    
    write(s)
    
end

# 10.661s
procedure problem10b()
    local p, s := 0
    local n := 2000000
    write("problem10b")

    every p := prime() & (p < n & s +:= p) | (p > n & write(s) & fail)
    
end

# 6.038s (much faster)
procedure problem10c()
    local p := s := 0
    write("problem10c")
    p := 5 # skipping 2+5
    s := 10
    while (p := nxtprime(p+1)) < 2000000 & s+:=p
    write(s)
end


# E's sieve, faster 0.854s
procedure problem10d()
    n := 2000000
    s := list(n,0) # size n and init 0
    s[1] := 1 # 1 is not a prime
    every i := 2 to round(sqrt(n)) do 
        if s[i] = 0 then 
            every j := i*i to n by i do 
                if s[j] = 0 then 
                    s[j] := 1 
    w := 0
    every i := 1 to n & (s[i] = 0 & w +:= i)
    write(w)


end

procedure p10(n)
    suspend p:= prime() do 
        if p > n-1 then fail
end
