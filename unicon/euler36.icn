#
# Euler problem 36
#
# """
# The decimal number, 585 = 1001001001_(2) (binary), is palindromic 
# in both bases.
#  
# Find the sum of all numbers, less than one million, which are palindromic 
# in base 10 and base 2.
#
# (Please note that the palindromic number, in either base, may not 
# include leading zeros.)
# """
#
# This program was written by Hakan Kjellerstrand (hakank@gmail.com)
# Also see my Icon/Unicon page http://www.hakank.org/icon/
#
link numbers, strings,convert,lists
procedure main()
    # problem36()
    problem36b()
end

procedure problem36()
    n := 999999
    s := 0
    every i := 1 to n do {
        if ispal(i) & ispal(exbase10(i,2)) then s+:=i
    }
    write(s)
end

# Using list comprehension. Slightly slower.
# Note: 
# The (...,,exbase10(i,2),i) construct returns i. 
# Otherwise it would return the base 2 representation
# Also, not that sum(values[]) defined in numbers.icn requires a "unlisted" parameters
# e.g.. sum(1,2,3,4,5,6). Hence the sum ! [: .. :]
procedure problem36b()
    write(sum ! [: i:= (1 to 999999) & ispal(i) & (ispal(exbase10(i,2)),i) :])
end

# List sum
procedure lsum(values)
   local result
   result := 0
   every result +:= !values
   return result
end

