#
# Euler problem 14
#
# """
# The following iterative sequence is defined for the set of positive integers:
#
# n → n/2 (n is even)
# n → 3n + 1 (n is odd)
#
# Using the rule above and starting with 13, we generate the following sequence:
# 13 → 40 → 20 → 10 → 5 → 16 → 8 → 4 → 2 → 1
#
# It can be seen that this sequence (starting at 13 and finishing at 1) contains 10 terms. 
# Although it has not been proved yet (Collatz Problem), it is thought that all starting 
# numbers finish at 1.
#
# Which starting number, under one million, produces the longest chain?
#
# NOTE: Once the chain starts the terms are allowed to go above one million.
# """
#
# This program was written by Hakan Kjellerstrand (hakank@bonetmail.com)
# Also see my Icon/Unicon page http://www.hakank.org/icon/
#

link numbers

procedure main()
   problem14()
end

procedure problem14()
    local c, n, max_num, max_len, hash
    c := 1000000
    n := 2
    max_num := 1
    max_len := 1

    hash := table(0)
    while n < c do {
        m := n
        len := 0
        while m > 1 do {
            if hash[m] > 0 then {
                len +:= hash[m]
                break
            } else {
                if m % 2 = 0 then m /:= 2 else m := 3 * m + 1;
                len +:= 1
            }
        }
        hash[n] := len

        if len > max_len then { max_len := len; max_num := n  }

        n +:= 1
    }
    
    # write the hash table
    # every k :=key(sort(hash)) do
    #    write(k, " -> ", hash[k])

    write("max_num: ", max_num, " max_len: ", max_len)

end
