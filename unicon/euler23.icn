#
# Project Euler problem 23
# """
# A perfect number is a number for which the sum of its proper divisors 
# is exactly equal to the number. For example, the sum of the proper divisors 
# of 28 would be 1 + 2 + 4 + 7 + 14 = 28, which means that 28 is a perfect number.
#
# A number n is called deficient if the sum of its proper divisors is less than 
# n and it is called abundant if this sum exceeds n.
#
# As 12 is the smallest abundant number, 1 + 2 + 3 + 4 + 6 = 16, the smallest number 
# that can be written as the sum of two abundant numbers is 24. By mathematical 
# analysis, it can be shown that all integers greater than 28123 can be written 
# as the sum of two abundant numbers. However, this upper limit cannot be reduced 
# any further by analysis even though it is known that the greatest number that 
# cannot be expressed as the sum of two abundant numbers is less than this limit.
#
# Find the sum of all the positive integers which cannot be written as the sum of 
# two abundant numbers.
# """
# Answer: 4179871
#
# This program was written by Hakan Kjellerstrand (hakank@bonetmail.com)
# Also see my Icon/Unicon page http://www.hakank.org/icon/
#
link numbers, factors
procedure main()
  problem23()
end

procedure problem23()
    local s, a, b, c, ss, h, n
    # From http://mathworld.wolfram.com/AbundantNumber.html: 
    # "Every number greater than 20161 can be expressed as a sum of two abundant numbers."
    n := 20161
    s := set()
    every a := 1 to n do {
        b := sum_divisors(a)
        if b > a then {
            insert(s, a)
        }
    }
    s2 := set();
    every a := !s do {
        every b := !s do {
            insert(s2, a+b)
        }
    }
    s3 := 0
    every i := 1 to n do {
        if not member(s2,i) then {
            s3 +:= i
        }
    }
    write(s3)

end


procedure sum_divisors(n) 
  local i, s
  s := 1
  every i := 2 to floor(sqrt(n)) do {
      if n % i = 0 then {
          s +:= i
          if i ~= n / i then {
             s +:= n / i
          }
      }
  }
  return s
end


procedure sumx(L) 
   result := 0
   every result +:= !values
   return result
end
