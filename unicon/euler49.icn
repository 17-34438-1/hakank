#
# Euler problem 49
#
# """
# The arithmetic sequence, 1487, 4817, 8147, in which each of the terms 
# increases by 3330, is unusual in two ways: (i) each of the three terms are 
# prime, and, (ii) each of the 4-digit numbers are permutations of one another.
#
# There are no arithmetic sequences made up of three 1-, 2-, or 3-digit primes, 
# exhibiting this property, but there is one other 4-digit increasing sequence.
#
# What 12-digit number do you form by concatenating the three terms 
# in this sequence?
#
# """
#
# This program was written by Hakan Kjellerstrand (hakank@gmail.com)
# Also see my Icon/Unicon page http://www.hakank.org/icon/
#
link numbers

procedure main()
   problem49()
end


procedure problem49()
  diff := 3330
  res := 0
  every n := 1001 to 9999 by 2 do {
      if n ~== 1487 & isprime(n) then {
           c := check_perms(n,diff)
           if not(c == "") then {
               res := c
               last
           }
      }
  }
  write(res)
end


procedure check_perms(n,diff) 
    ll := ""
    perms := all_perms(string(n))
    if *perms > 0 then {
        p1 := p2 := 0
        p1 := get_element(n,perms,diff)
        if p1 > 0 then {
            p2 := get_element(p1,perms,diff)
        }
        if p2 > 0 then {
            ll := n || p1 || p2
            last
        }
    }
    return ll
end


procedure get_element(n,ll,diff) 
    res := 0
    every p := !ll do {
        if p > n & p-n == diff then {
            res := p
            last
        }
    }
    return res
end

procedure all_perms(s) 
   perms := []
   every p := permute(s) do {
       put(perms,p)
   }
   return perms
end

# string permute to simplify things
procedure permute(s)
   local i, x, t
   if s == "" then return ""
   every i := 1 to *s do {
       x := s[i]
       t := s
       t[i] := ""
       suspend x || permute(t)
   }
end
