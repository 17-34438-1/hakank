#
# Euler problem 2
#
# """
# Each new term in the Fibonacci sequence is generated by adding the 
# previous two terms. By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# Find the sum of all the even-valued terms in the sequence which do not 
# exceed four million.
# """
#
# This program was written by Hakan Kjellerstrand (hakank@bonetmail.com)
# Also see my Icon/Unicon page http://www.hakank.org/icon/
#
procedure main()
   problem2()
end

procedure problem2()
    local s := 0
    every s +:= fib_test(1 to 100)
    write(s)

end

# For roblem 2
procedure fib_test(n) 
    if (f := fib(n)) % 2 == 0 & f < 4000000 then return f
   
end

# brute force
procedure slowfib(n)
    if n <= 2 then
        return 1
    else 
        return fib(n-1) + fib(n-2);
end

procedure fib(n)
    local prevfib, currfib, nfib
    nfib := 2
    prevfib :=1
    currfib :=1
    while nfib<n do {
        prevfib :=: currfib
        currfib +:= prevfib
        nfib +:= 1
    }
    return currfib
end
