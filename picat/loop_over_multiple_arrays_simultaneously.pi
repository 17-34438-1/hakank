/* 

  Loop over multiple arrays simultaneously (Rosetta code) in Picat.

  http://rosettacode.org/wiki/Loop_over_multiple_arrays_simultaneously
  """
  Loop over multiple arrays (or lists or tuples or whatever they're called in 
  your language) and print the ith element of each. Use your language's 
  "for each" loop if it has one, otherwise iterate through the collection 
  in order with some other loop.

  For this example, loop over the arrays (a,b,c), (A,B,C) and (1,2,3) to produce 
  the output

  aA1
  bB2
  cC3

  If possible, also describe what happens when the arrays are of different lengths. 
  """

  Picat's zip/n assumes that all n arrays are of the same length, otherwise an
  error occurs.


  This Picat model was created by Hakan Kjellerstrand, hakank@gmail.com
  See also my Picat page: http://www.hakank.org/picat/

*/


import util.


main => go.


go =>

  L1 = ["a","b","c"], 
  L2 = ["A","B","C"],
  L3 = ["1","2","3"],

  % note: zip/n returns an array, hence {A,B,C} (and not [A,B,C])

  % foreach loop
  foreach({A,B,C} in zip(L1,L2,L3))
    println([A,B,C].join(''))
  end,
  nl,

  % list comprehension
  println( [[A,B,C].join('') : {A,B,C} in zip(L1,L2,L3)].join("\n")),
  nl,

  % test lists of uneven lengths
  catch(test_uneven, E, println(E)),
  nl,

  % zip2/1: Can handle lists of uneven lengths
  L4 = ["v","w","x","y","z"], % not the same length as the other
  foreach([A,B,C,D] in zip2([L1,L2,L3,L4]))
    println([A,B,C,D].join(''))
  end,
  nl,

  nl.

%
% This predicate raise an exception: list_of_same_length_expected
%
test_uneven =>
  L1 = ["a","b","c"], 
  L2 = ["A","B","C"],
  L3 = ["1","2","3"],
  L4 = ["1","2","3","4"], % not the same length as the other
  foreach({A,B,C,D} in zip(L1,L2,L3,L4)) 
    println([A,B,C,D].join('')) 
  end,
  nl.


%
% A variant of zip/n that can handle lists of uneven lengths.
%
zip2(L) = Zip =>
  MinLen = min([LL.length : LL in L]),
  Zip = [[L[I,J] : I in 1..length(L)] : J in 1..MinLen ].
