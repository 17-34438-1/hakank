/* 

  Quicksort in Picat.

  From Rosetta code
  http://rosettacode.org/wiki/Sorting_algorithms/Quicksort

  This Picat model was created by Hakan Kjellerstrand, hakank@gmail.com
  See also my Picat page: http://www.hakank.org/picat/

*/


% import util.
% import cp.


main => go.


go =>
  
  S1 = [1,2,3,4,5,6,6,5,4,4,3,2,1],
  println(s1=qsort(S1)),

  S2 = [ random2() mod 100 : _I in 1..1000],
  time(println(s2=qsort(S2))),

  S3 = [ random2() mod 10000 : _I in 1..10000],
  _T3 = qsort(S3),
  time(println("S3 sorted")),

  S4 = (1..1000).shuffle(),
  time(println(s4=qsort(S4))),

  nl.


%
% This definition is from Picat Guide, page 7.
%
qsort([])    = [].
qsort([H|T]) = qsort([E : E in T, E =< H]) 
               ++ [H] ++
               qsort([E : E in T, E > H]).


shuffle(List) = List2 => 
  List2 = List,
  Len = List.length,
  foreach(I in 1..Len) 
    R2 = 1+(random2() mod Len),
    List2 := swap(List2,I,R2)
  end.


%
% Swap position I <=> J in list L
%
swap(L,I,J) = L2 =>
  L2 = L,
  T = L2[I],
  L2[I] := L2[J],
  L2[J] := T.


