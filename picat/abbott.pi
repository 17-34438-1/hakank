/* 

  The Abbott's Window puzzle in Picat.

  From Martin Chlond Integer Programming Puzzles:
  http://www.chlond.demon.co.uk/puzzles/puzzles3.html, puzzle 2 The Abbott's Widow.
  Description  : The Abbott's Window
  Source       : Dudeney, H.E., (1917), Amusements in Mathematics, Thomas Nelson and Sons.

  This model was inspired by the XPress Mosel model created by Martin Chlond.
  http://www.chlond.demon.co.uk/puzzles/sol3s2.html


  This Picat model was created by Hakan Kjellerstrand, hakank@gmail.com
  See also my Picat page: http://www.hakank.org/picat/

*/


import sat.
% import cp.

main => go.


go =>
  Row = 8,
  R = 1..Row,
  Col = 8,
  C = 1..Col,

  X = new_array(Row,Col),
  X in 0..1,

  A = new_array(Row),
  A in 0..4,
  B = new_array(Col),
  B in 0..4,
  Row2=Row-2,
  CC = new_list(Row2),
  CC in 0..4,
  D = new_list(Col-1),
  D in 0..4,

  E = new_list(Col-1),
  E in 0..4,
  F = new_list(Row-2),
  F in 0..4,


  TotalSum #= sum([X[I,J] : I in R, J in C]),

  foreach(I in R)
     sum([X[I,J] : J in C]) #= 2*A[I]
  end,
    
  foreach(J in C)
     sum([X[I,J] : I in R]) #= 2*B[J]
  end,

  foreach(I in 2..Row-1)
     sum([X[K,I-K+1] : K in 1..I])  #= 2*CC[I-1]
  end,

  foreach(J in 1..Col-1)
     sum([X[K,Col-K+J] : K in J..Row])  #= 2*D[J]
  end,

  foreach(J in 1..Col-1)
    sum([X[K,J+K-1] : K in 1..Row-J+1])  #= 2*E[J]
  end,

  foreach(I in 2..Row-1)
     sum([X[K,K-I+1] : K in I..Row])  #= 2*F[I-1]
  end,

  X[1,1] #= 1,
  X[Row,1] #= 1,
  X[1,Col] #= 1,
  X[Row,Col] #= 1,

  solve($[max(TotalSum)], X.to_list() ++ [TotalSum]),

  writeln(totalSum=TotalSum),
  foreach(XRow in X) writeln(XRow.to_list()) end,
  
  nl.

